{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2024-10-08T00:42:09.840348+00:00",
  "repo": "cfrg/draft-irtf-cfrg-aegis-aead",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 3,
      "id": "I_kwDOKeDGj850g8YP",
      "title": "Document a way to commit to everything",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/issues/3",
      "state": "CLOSED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Due to the way the AD is absorbed, the differences of key and nonce can be canceled out, leading to a state collision. This is why AEGIS isn't fully committing.\r\n\r\nSomething to explore is slower absorption, giving control only on half an AES word before the permutation:\r\n\r\nAEGIS-256:\r\n\r\n```\r\nAbsorb(ai):\r\n    t0, t1 = Split(ai, 64)\r\n    Update(ZeroPad(t0, 128))\r\n    Update(ZeroPad(t1, 128))\r\n```\r\n\r\nAEGIS-128L:\r\n\r\n```\r\nAbsorb(ai):\r\n    t0, t1, t2, t3 = Split(ai, 64)\r\n    Update(ZeroPad(t0, 128), ZeroPad(t1, 128))\r\n    Update(ZeroPad(t2, 128), ZeroPad(t3, 128))\r\n```\r\n\r\nEliminating the differences in just a single word would then require up to 2^64 input blocks, and differences would be reintroduced on the following state updates. \r\n\r\nAssociated data is usually pretty short, so performance impact should be acceptable.\r\n\r\nA more conservative way that doesn't require a different absorption procedure is to hash the AD, i.e. recommend using:\r\n\r\n```\r\nEncrypt(msg, H(ad), key, nonce)\r\n```\r\n\r\ninstead of\r\n\r\n```\r\nEncrypt(msg, ad, key, nonce)\r\n```\r\n\r\nAs long as `H` is preimage-resistant, finding associated data that cancel the key and nonce differences becomes impractical.\r\n\r\nSure, hashing has a cost, and the security level can degrade to the one of the hash function. But only the AD has to be hashed, it doesn't require changes to the specification nor implementations, and that can be documented as a simple recommendation for protocols that require a fully committing scheme.",
      "createdAt": "2023-10-20T18:01:56Z",
      "updatedAt": "2023-10-24T17:50:21Z",
      "closedAt": "2023-10-24T17:50:20Z",
      "comments": [
        {
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "body": "> Something to explore is slower absorption, giving control only on half an AES word before the permutation\r\n\r\nWhilst I like this idea, isn't it too late to make such a change?\r\n\r\n> A more conservative way that doesn't require a different absorption procedure is to hash the AD\r\n\r\nThis seems worth mentioning. Security Considerations section?",
          "createdAt": "2023-10-20T18:21:06Z",
          "updatedAt": "2023-10-20T18:21:06Z"
        },
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "> Whilst I like this idea, isn't it too late to make such a change?\r\n\r\nIt is.\r\n\r\nWe can document this as optionally calling `Encrypt(msg, Expand(ad), key, nonce)` for protocols requiring full commitment, and define `Expand(ad)` as something like:\r\n\r\n```\r\na = Split(ZeroPad(ad, 128), 64)\r\nb = {}\r\nfor x in a:\r\n   b = b || ZeroPad(x, 128)\r\nreturn b \r\n```\r\n\r\ni.e. insert a 64 bit empty block every 64 bit ad block.\r\n\r\nBut this is not ideal, and looks like a last-minute patch. Also requires a publication to refer to.\r\n\r\nHashing the AD is not as efficient, but boring in a good way.\r\n\r\n> Security Considerations section?\r\n\r\nLooks like right place for it.",
          "createdAt": "2023-10-20T18:42:08Z",
          "updatedAt": "2023-10-20T18:42:08Z"
        }
      ]
    },
    {
      "number": 7,
      "id": "I_kwDOKeDGj850h325",
      "title": "Add implementation status",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/issues/7",
      "state": "CLOSED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "https://www.rfc-editor.org/rfc/rfc7942 (also recommended in https://www.ietf.org/archive/id/draft-eckel-edm-find-code-02.html) suggests adding an \"Implementation status\" section, that will eventually be removed before the RFC is published.\r\n\r\nEven though Datatracker links this repository for discussions, finding available implementations, including the reference ones, may not be obvious.\r\n\r\nMaybe we should add an \"Implementation status\" section, that either includes a copy of the table with have in the `README.md` file here, or links to it.",
      "createdAt": "2023-10-20T21:32:15Z",
      "updatedAt": "2023-10-23T20:36:31Z",
      "closedAt": "2023-10-22T08:38:34Z",
      "comments": [
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "`draft-eckel-edm-find-code` mentions:\r\n\r\n> A GitHub repository is associated with the I-D using the `github_repo` tag.\r\n\r\nWe should use that to add a link to this repository. I looked really hard, but didn't find how to add that tag on Datatracker. How to do this?\r\n\r\n/cc @eckelcu ",
          "createdAt": "2023-10-20T21:36:12Z",
          "updatedAt": "2023-10-20T21:36:12Z"
        },
        {
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "body": "> Maybe we should add an \"Implementation status\" section, they either includes a copy of the table with have in the README.md file here, or links to it.\r\n\r\nI think it would be better to link to the table since that will be kept up to date rather than new drafts. The amount of information this RFC is talking about would also make for a long section.\r\n\r\nWe should probably add `This note is to be removed before publishing as an RFC.` like in the `Discussion Venues` so we hopefully don't forget to remove it.",
          "createdAt": "2023-10-21T18:00:53Z",
          "updatedAt": "2023-10-21T18:00:53Z"
        },
        {
          "author": "eckelcu",
          "authorAssociation": "NONE",
          "body": "> `draft-eckel-edm-find-code` mentions:\r\n> \r\n> > A GitHub repository is associated with the I-D using the `github_repo` tag.\r\n> \r\n> We should use that to add a link to this repository. I looked really hard, but didn't find how to add that tag on Datatracker. How to do this?\r\n> \r\n> /cc @eckelcu\r\n\r\ndraft authors are able to add these tags for individual drafts. Once they become working group drafts, only the WG chairs can add them.",
          "createdAt": "2023-10-23T20:28:09Z",
          "updatedAt": "2023-10-23T20:28:09Z"
        },
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "Thank you @eckelcu !\r\n\r\nThat explains it.",
          "createdAt": "2023-10-23T20:36:30Z",
          "updatedAt": "2023-10-23T20:36:30Z"
        }
      ]
    },
    {
      "number": 9,
      "id": "I_kwDOKeDGj850kEPh",
      "title": "Downloadable test vectors",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/issues/9",
      "state": "CLOSED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The document includes test vectors that are easy to parse.\r\n\r\nBut maybe it would be useful to also offer them as files that can be downloaded from this repository, in various formats (KAT, JSON, etc.)\r\n\r\nSimilar to the implementation table, the link would have to be removed before the RFC publication.",
      "createdAt": "2023-10-21T18:18:15Z",
      "updatedAt": "2023-11-05T11:15:26Z",
      "closedAt": "2023-11-05T11:15:26Z",
      "comments": [
        {
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "body": "That's a good idea. How would the 'verification failed' ones be separated? Would the different AEGIS-128/256X2 vs 4 test vectors go in the same file?",
          "createdAt": "2023-10-22T08:43:32Z",
          "updatedAt": "2023-10-22T08:43:32Z"
        },
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "The Project Wycheproof test vectors include a \"result\" property (`valid`/`invalid`). At least for JSON, we can adopt their conventions.\r\n\r\nAnd once file per variant is probably more convenient.\r\n\r\n",
          "createdAt": "2023-10-22T10:16:36Z",
          "updatedAt": "2023-10-22T10:16:36Z"
        }
      ]
    },
    {
      "number": 15,
      "id": "I_kwDOKeDGj851YJXz",
      "title": "\"byte\" vs \"octet\"",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/issues/15",
      "state": "CLOSED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The document uses both \"byte\" and \"octet\".\r\n\r\nMaybe we should use only \"octet\" everywhere.",
      "createdAt": "2023-10-30T21:35:41Z",
      "updatedAt": "2023-11-09T19:59:44Z",
      "closedAt": "2023-11-09T19:59:43Z",
      "comments": [
        {
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "body": "Would we change the `Byte(x)` function? I would prefer byte everywhere, but I presume octet eliminates any ambiguity. The ChaCha20-Poly1305 RFC seems to use both.",
          "createdAt": "2023-11-05T10:26:03Z",
          "updatedAt": "2023-11-05T10:26:03Z"
        },
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm not a big fan of \"octet\" either. Even less as a function name. But we can't assume that both terms are interchangeable, as this is not true, even today (e.g. DSPs).\r\n\r\nMaybe we can use `byte` everywhere, and mention somewhere that thorough this document, `byte`  refers to a 8-bit  sequence? I'm not sure how/where that could be doable, but it may be worth it, no matter what the ChaChaPoly RFC did.\r\n",
          "createdAt": "2023-11-05T22:31:51Z",
          "updatedAt": "2023-11-05T22:31:51Z"
        },
        {
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "body": "> Maybe we can use byte everywhere, and mention somewhere that thorough this document, byte refers to a 8-bit sequence? I'm not sure how/where that could be doable, but it may be worth it\r\n\r\nI like that idea, but I'm not sure where that would go. Could we have a sentence at the top of `Conventions and Definitions`? Kind of like the [age spec](https://github.com/C2SP/C2SP/blob/main/age.md) but after the key words bit.",
          "createdAt": "2023-11-07T18:44:27Z",
          "updatedAt": "2023-11-07T18:44:27Z"
        },
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed in #22 ",
          "createdAt": "2023-11-09T19:59:43Z",
          "updatedAt": "2023-11-09T19:59:43Z"
        }
      ]
    },
    {
      "number": 16,
      "id": "I_kwDOKeDGj851YMKe",
      "title": "Mention that different variants produce different [ciphertexts and] tags",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/issues/16",
      "state": "CLOSED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "It's not clear that the parallelism degree affects not only performance, but also the output.\r\n\r\nWe should mention somewhere that for a given `(key,nonce,ad,msg)`, different parallelism degrees can produce different authentication tags. \r\n\r\nIf #14 is merged, we should extend that to the ciphertexts.\r\n\r\nWhat would be the best place for that? In the security considerations?\r\n\r\n",
      "createdAt": "2023-10-30T21:45:43Z",
      "updatedAt": "2023-11-16T21:26:02Z",
      "closedAt": "2023-11-16T21:26:02Z",
      "comments": [
        {
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "body": "Yes, that makes sense. I think it could go there. We haven't mentioned that different associated data affects the ciphertext for the standard variants either have we? Perhaps we could mention both in one paragraph.",
          "createdAt": "2023-11-05T10:30:34Z",
          "updatedAt": "2023-11-05T10:30:34Z"
        },
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "> We haven't mentioned that different associated data affects the ciphertext for the standard variants either have we? \r\n\r\nWe haven't, but if we do, we should be cautious and set the preconditions for that to hold true. It can be a little bit complicated and confusing.\r\n\r\nThe AD and the message are absorbed the same way. \r\n\r\nWhich implies that `Enc(ad=AA...ABB...B, msg=CC...CDD...D)` produces the same ciphertext as `Enc(ad=AA...A, msg=BB...BCC...CDD....D)` for `DD....D`.\r\n\r\n",
          "createdAt": "2023-11-05T22:25:18Z",
          "updatedAt": "2023-11-05T22:25:18Z"
        }
      ]
    },
    {
      "number": 17,
      "id": "I_kwDOKeDGj851knNi",
      "title": "Rejecting weak states",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/issues/17",
      "state": "CLOSED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "As in many constructions, AEGIS has weak states. If the keys are randomly chosen as required, getting them is very unlikely. But with specifically crafted keys and inputs, weak states be reached.\r\n\r\nAs a safeguard, we can add an additional step in the decryption function, before `expected_tag = Finalize(|ad|, |msg|)`, that checks if all the AES blocks are identical, and returns an error if this is the case.",
      "createdAt": "2023-11-01T14:51:45Z",
      "updatedAt": "2023-11-01T17:54:22Z",
      "closedAt": "2023-11-01T17:54:22Z",
      "comments": [
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "Scratch that. In order to be useful, it should be done after every update, which would be way too expensive.",
          "createdAt": "2023-11-01T17:54:22Z",
          "updatedAt": "2023-11-01T17:54:22Z"
        }
      ]
    },
    {
      "number": 19,
      "id": "I_kwDOKeDGj851m44o",
      "title": "Mention that AEGIS must not not used as a hash function",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/issues/19",
      "state": "CLOSED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "AEGIS is a very good and fast MAC, so it could be tempting to use it as a replacement for a hash function.\r\n\r\nBut if the key is known, inputs generating state collisions can be easily crafted. So, we should make that clear somewhere, probably in the security considerations.\r\n",
      "createdAt": "2023-11-01T21:18:55Z",
      "updatedAt": "2023-11-11T17:30:46Z",
      "closedAt": "2023-11-11T17:30:46Z",
      "comments": [
        {
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "body": "I agree. That's a sensible place to put it.",
          "createdAt": "2023-11-05T10:21:51Z",
          "updatedAt": "2023-11-05T10:21:51Z"
        }
      ]
    },
    {
      "number": 20,
      "id": "I_kwDOKeDGj8515wKD",
      "title": "Require SHA512 for the variants with 256-bit security?",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/issues/20",
      "state": "CLOSED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "It's 2am and I need to get some sleep before reading this, but @emanjon just dropped this:\r\n\r\nhttps://eprint.iacr.org/2023/913.pdf\r\n\r\nFor AEGIS-256X, this is not an issue, as the IANA request hasn't been made yet.\r\n\r\nFor `TLS_AEGIS_256_SHA384`, I don't know if the suite name can be updated (that would be a breaking change for existing implementations, but this is fine as the document is still a draft), or if we should ask for a new one.\r\n\r\n",
      "createdAt": "2023-11-06T00:58:49Z",
      "updatedAt": "2023-12-01T16:28:01Z",
      "closedAt": "2023-12-01T16:26:40Z",
      "comments": [
        {
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "body": "I haven't read the full paper yet, but it does seem like that should be swapped. Guess [Sabrina Tanamal](https://mailarchive.ietf.org/arch/msg/tls-reg-review/NTUFnKVAqI832Jt-fe-HzT-xaJw/) who assigned that needs to be contacted/asked.",
          "createdAt": "2023-11-07T18:41:14Z",
          "updatedAt": "2023-11-07T18:41:14Z"
        },
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "I reached out to Sabrina. Waiting for her response.",
          "createdAt": "2023-11-16T21:26:53Z",
          "updatedAt": "2023-11-16T21:26:53Z"
        },
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "IANA updated the entry: https://www.iana.org/assignments/tls-parameters/tls-parameters.xhtml#tls-parameters-4\r\n\r\nI'm going to inform/update existing implementations.",
          "createdAt": "2023-12-01T16:28:00Z",
          "updatedAt": "2023-12-01T16:28:00Z"
        }
      ]
    },
    {
      "number": 26,
      "id": "I_kwDOKeDGj854uHkH",
      "title": "Remove documentation on TLS / DTLS / QUIC",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/issues/26",
      "state": "CLOSED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "As discussed on the CFRG list, the TLS WG would be a better place for this, and it should be a distinct document.",
      "createdAt": "2023-12-05T06:08:11Z",
      "updatedAt": "2023-12-05T14:55:02Z",
      "closedAt": "2023-12-05T14:55:02Z",
      "comments": []
    },
    {
      "number": 29,
      "id": "I_kwDOKeDGj857k_wK",
      "title": "Alignment with draft-irtf-cfrg-aead-properties",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/issues/29",
      "state": "CLOSED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We should align with the `draft-irtf-cfrg-aead-properties` draft. There was already an open issue about this on the previous repository, but it was unfortunately lost, and was probably referring to an older revision of the draft anyway. So let's go though the different properties again, and then see how to include them in the document.\r\n\r\n- **confidentiality:** yes, and the current document already includes details about this.\r\n- **data integrity:** ditto\r\n- **blockwise security:** yes, since the output function is a linear combination of multiple blocks, and doesn't reveal anything about the actual state.\r\n- **full commitment:** no, even though we document a simple and efficient way to achieve this.\r\n- **key commitment:** the `aead-properties` draft is being updated in a way that can capture the relaxed setup applicable to AEGIS.\r\n- **key dependent messages security:** this is a protocol property, not an AEAD property. Reported to the `aead-properties` author.\r\n- **leakage resistance:** no, already documented\r\n- **multi-user security:** the large nonce size of AEGIS-256 makes it possible to embed a key identifier, and still allow random nonces to be safely used. With a distinct key identifier for every user, there's no security degradation even in a multi-target setting. See section 3.2.1 of [Xoodyak](https://csrc.nist.gov/CSRC/media/Projects/lightweight-cryptography/documents/finalist-round/updated-spec-doc/xoodyak-spec-final.pdf) for a precedent. With AEGIS-128, the 32 extra bits compared to current AEADs used in IETF protocols can also be used to embed a key identifier.\r\n- **nonce misuse**: no, already documented \r\n- **reforgeability resilience**: see [Reforgeability of Authenticated Encryption Schemes](https://eprint.iacr.org/2017/332.pdf), especially section 4.3. And that's one more paper we can cite.\r\n- **Release of unverified plaintext:** no, already documented.\r\n- **Inverse-free:** yes\r\n- **lightweight:** no\r\n- **online:** yes\r\n- **parallelizable:** yes\r\n- **single-pass:** yes\r\n- **static associated data:** no\r\n- **ZK-friendly:** no\r\n- **incremental:** no, if only because it must be used in a nonce-respecting setting.\r\n- **nonce-hiding:** no\r\n- **remotely-keyed:** not a property of an AEAD, this requires a protocol. Reported to the `aead-properties` author.\r\n- **robust:** no",
      "createdAt": "2024-01-09T22:49:48Z",
      "updatedAt": "2024-01-17T21:29:53Z",
      "closedAt": "2024-01-17T21:29:53Z",
      "comments": [
        {
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks for going through them and those references. Seeing as there are so many, shall we stick to the ones that are 'yes'? Most of the 'no's don't seem popular in practice.\r\n\r\nMulti-user security and reforgeability resilience should definitely be discussed. Parallelizable is already being mentioned. I'm not sure if inverse-free, online, and single-pass need to be stated given they're somewhat obvious if you read the draft, although they could go in the Introduction. Haven't read about blockwise security.",
          "createdAt": "2024-01-10T18:42:06Z",
          "updatedAt": "2024-01-10T18:42:06Z"
        },
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "The plan can be:\r\n\r\n- Make sure the vocabulary we use matches the one from the `aead-properties` spec, and try to use it whenever we describe some of these properties without using it.\r\n- The \"no\" ones don't seem to be very interesting to mention.\r\n- Inverse-free, online and single-pass can be quickly dropped somewhere in the intro, unless that feels too artificial\r\n- Blockwise-security doesn't sound necessary. All standardized AEADs have that property, or else they could hardly be qualified as IND-CCA secure. It would rather be something worth mentioning if a construction would NOT have that property.\r\n- Multi-user security and reforgeability can be added to the Security Considerations section.",
          "createdAt": "2024-01-10T19:03:08Z",
          "updatedAt": "2024-01-10T19:03:08Z"
        }
      ]
    },
    {
      "number": 31,
      "id": "I_kwDOKeDGj858JHyE",
      "title": "Security considerations section is too long",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/issues/31",
      "state": "CLOSED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Maybe we should split its content into a few subsections.",
      "createdAt": "2024-01-15T22:46:11Z",
      "updatedAt": "2024-01-20T14:07:04Z",
      "closedAt": "2024-01-20T14:07:04Z",
      "comments": [
        {
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "body": "I agree. This will make it easier to find information you care about.",
          "createdAt": "2024-01-16T18:41:40Z",
          "updatedAt": "2024-01-16T18:41:40Z"
        }
      ]
    },
    {
      "number": 33,
      "id": "I_kwDOKeDGj858QBJ7",
      "title": "Proofread final document",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/issues/33",
      "state": "OPEN",
      "author": "samuel-lucas6",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Before it gets published as an RFC, we should run the document through some spelling/grammar checkers and have a final read to check we haven't missed anything. It'll be quite a big job.",
      "createdAt": "2024-01-16T18:25:51Z",
      "updatedAt": "2024-01-16T19:52:14Z",
      "closedAt": null,
      "comments": [
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "After the RGLC, if there are enough votes, the chairs are going to review the document.\r\n\r\nThen, no major changes to the content nor the structure can be made.\r\n\r\nHowever, the document will be reviewed by the IRTF and then by the RFC editor with an emphasis on conformance/spelling/grammar. \r\n\r\nIt doesn't mean that we shouldn't proactively proofread everything (even though you did a stellar job in all your contributions and reviews), just that this is not required for the RGLC.",
          "createdAt": "2024-01-16T19:52:13Z",
          "updatedAt": "2024-01-16T19:52:13Z"
        }
      ]
    },
    {
      "number": 40,
      "id": "I_kwDOKeDGj86LiN9j",
      "title": "Another way to achieve full commitment",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/issues/40",
      "state": "CLOSED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Hashing the AD is mostly a workaround, and relies on an external primitive.\r\n\r\nThere's a more straightforward way to get full commitment, if required.\r\n\r\nRight after initialization, and prior to absorbing the AD, call `Update(0*)`, and use 128 bits of the output function as the commitment.\r\n\r\nThis is similar to the practice of adding a fixed block to the plaintext that works with AES-GCM, but not with AEGIS since a collision can happen before the plaintext. But unlike with GCM, side channels in the context of partitioning oracle attacks are not a concern here. Applications are only required to check *both* the commitment and the tag.\r\n\r\nThere would be a lack of explicit context separation between regular AEAD usage, and usage with the extra `Update(0*)` call. But in a nonce-respecting setting, that shouldn't be an issue, especially since the actual input sizes are included in the finalization step.\r\n\r\nThe downside is ciphertext expansion. But it may be acceptable. And that would only be necessary for protocols that actually require full commitment, including the AD.\r\n\r\nIt should be possible to document this in a single paragraph of the Security section.\r\n\r\nImplementing this would be trivial, but may complicate APIs.\r\n\r\nWhat do you think, @samuel-lucas6 ?",
      "createdAt": "2024-06-07T18:56:35Z",
      "updatedAt": "2024-06-12T13:15:58Z",
      "closedAt": "2024-06-08T18:29:28Z",
      "comments": [
        {
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "body": "That's an interesting idea. So, it would be the `Enc()` function getting called once to get an output before `Absorb()` for the associated data?\r\n\r\nI think this could be documented as I agree with your points; however, I'm not sure many people are likely to use this. It would need to be clear that this is basically modifying the algorithm, unlike the padding fix with AES-GCM.",
          "createdAt": "2024-06-08T10:34:07Z",
          "updatedAt": "2024-06-08T10:34:07Z"
        },
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "> That's an interesting idea. So, it would be the `Enc()` function getting called once to get an output before `Absorb()` for the associated data?\r\n\r\nCorrect. \r\n\r\n> I think this could be documented as I agree with your points; however, I'm not sure many people are likely to use this. It would need to be clear that this is basically modifying the algorithm, unlike the padding fix with AES-GCM.\r\n\r\nThat can be especially useful when AEGIS is used as a MAC.\r\n\r\nThat extra step should not be mentioned in the rest of the document, only in the section on commitment, as an alternative to hashing the AD. And we have to make it clear that implementations are absolutely not required to support this.",
          "createdAt": "2024-06-08T11:36:43Z",
          "updatedAt": "2024-06-08T11:36:43Z"
        },
        {
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "body": "> That can be especially useful when AEGIS is used as a MAC.\r\n\r\nI hadn't thought about that, and the expansion is more reasonable with a 128-bit tag.\r\n\r\n> That extra step should not be mentioned in the rest of the document, only in the section on commitment, as an alternative to hashing the AD. And we have to make it clear that implementations are absolutely not required to support this.\r\n\r\nYes, exactly. Let's do it then. Do you want me to take a stab at it?",
          "createdAt": "2024-06-08T13:06:14Z",
          "updatedAt": "2024-06-08T13:06:14Z"
        },
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "Thinking more about it... it would still be possible to find a `{ (k,n, ad), (k, n, ad') }` pair causing a state collision. So that still wouldn't give us full commitment.\r\n\r\nLet's forget about this, then. In real-world protocols, it's still fairly uncommon for an attack to have full control over the AD.",
          "createdAt": "2024-06-08T18:29:28Z",
          "updatedAt": "2024-06-08T18:29:28Z"
        },
        {
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "body": "Oh yeah, I didn't connect the dots either. The padding fix is limited to key commitment, which AEGIS already has when `ad` is fixed.\r\n\r\nDo you think it's worth saying `ad` can be specified during key derivation (e.g., with HKDF) for full commitment? That's one alternative we could discuss.",
          "createdAt": "2024-06-08T19:35:13Z",
          "updatedAt": "2024-06-08T19:35:13Z"
        },
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "Specifying `ad` during key derivation is indeed a good option, that would be worth documenting. ",
          "createdAt": "2024-06-08T22:41:45Z",
          "updatedAt": "2024-06-08T22:41:45Z"
        },
        {
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "body": "I'll do a PR for this when I get a minute.",
          "createdAt": "2024-06-12T12:43:39Z",
          "updatedAt": "2024-06-12T12:43:39Z"
        },
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "Thank you Samuel!",
          "createdAt": "2024-06-12T13:15:57Z",
          "updatedAt": "2024-06-12T13:15:57Z"
        }
      ]
    },
    {
      "number": 41,
      "id": "I_kwDOKeDGj86L_frd",
      "title": "Updated paper for AEGIS key commitment",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/issues/41",
      "state": "CLOSED",
      "author": "samuel-lucas6",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Came across [this](https://tosc.iacr.org/index.php/ToSC/article/view/11404/) paper the other day, which seems to be an update of the [preprint](https://eprint.iacr.org/2023/1495) we reference, although the updates are more about other algorithms. Do you think it's worth changing the reference and/or updating the Acknowledgments?",
      "createdAt": "2024-06-12T12:42:23Z",
      "updatedAt": "2024-06-13T19:52:18Z",
      "closedAt": "2024-06-13T19:52:18Z",
      "comments": [
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "Yes, this is the paper that was presented at FSE. I had an opportunity to chat with Mostafizar.\r\n\r\nThe results and methodology are the same as the one we reference, except that it expands to other algorithms.\r\n\r\nSo I'm not sure that it's worth changing the link. The current one has the advantage of being more focused.",
          "createdAt": "2024-06-12T13:15:08Z",
          "updatedAt": "2024-06-12T13:15:08Z"
        },
        {
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "body": "Cool, I did wonder if you'd say that. I'll close this then.",
          "createdAt": "2024-06-13T19:52:18Z",
          "updatedAt": "2024-06-13T19:52:18Z"
        }
      ]
    },
    {
      "number": 43,
      "id": "I_kwDOKeDGj86SYP8A",
      "title": "Another security analysis paper we may want to add",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/issues/43",
      "state": "CLOSED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "https://link.springer.com/article/10.1007/s13389-024-00360-6\r\n\r\nNothing that contradicts the current document, since we're explicitly mentioning that fault attacks are not part of the threat model.\r\n\r\nBut this is still analysis we may want to add to the list.",
      "createdAt": "2024-08-08T13:35:04Z",
      "updatedAt": "2024-08-08T20:51:41Z",
      "closedAt": "2024-08-08T20:51:41Z",
      "comments": [
        {
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "body": "Sounds good to me. Happy to do the PR.",
          "createdAt": "2024-08-08T17:15:39Z",
          "updatedAt": "2024-08-08T17:15:39Z"
        }
      ]
    },
    {
      "number": 45,
      "id": "I_kwDOKeDGj86U-3YG",
      "title": "spec: Off-by-one error in the definition of RFC 5116 constants",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/issues/45",
      "state": "CLOSED",
      "author": "Yawning",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "[RFC 5116](https://www.rfc-editor.org/rfc/rfc5116) defines `A_MAX` and `P_MAX` as an inclusive range (Section 4)\r\n\r\n> Each AEAD algorithm MUST accept any plaintext with a length between\r\n> zero and P_MAX octets, inclusive, where the value P_MAX is specific\r\n> to that algorithm.\r\n\r\n> Each AEAD algorithm MUST accept any associated data with a length\r\n> between zero and A_MAX octets, inclusive, where the value A_MAX is\r\n> specific to that algorithm.\r\n\r\nThe draft algorithm high-level definitions appear to follow this convention (Section 3, 4):\r\n\r\nhttps://github.com/cfrg/draft-irtf-cfrg-aegis-aead/blob/dc1f4805eba4c4305b16f9741524dbde0ccea586/draft-irtf-cfrg-aegis-aead.md?plain=1#L362-L363\r\n\r\nhttps://github.com/cfrg/draft-irtf-cfrg-aegis-aead/blob/dc1f4805eba4c4305b16f9741524dbde0ccea586/draft-irtf-cfrg-aegis-aead.md?plain=1#L698-L699\r\n\r\nHowever, it is clear from the algorithm pseduocode sections and how the tag is generated that this P_MAX/A_MAX must be exclusive (Links to the AEGIS-256 copies omitted for brevity).\r\n\r\nhttps://github.com/cfrg/draft-irtf-cfrg-aegis-aead/blob/dc1f4805eba4c4305b16f9741524dbde0ccea586/draft-irtf-cfrg-aegis-aead.md?plain=1#L385-L386\r\n\r\nhttps://github.com/cfrg/draft-irtf-cfrg-aegis-aead/blob/dc1f4805eba4c4305b16f9741524dbde0ccea586/draft-irtf-cfrg-aegis-aead.md?plain=1#L679\r\n\r\nWhile it is a combination of impossible/impractical/unlikely that data will every reach the length where this discrepancy actually matters, `P_MAX` and `A_MAX` should be changed to be `2^61 - 1 bytes (2^64 - 8 bits)`, and `C_MAX` should be updated accordingly.",
      "createdAt": "2024-09-01T14:36:25Z",
      "updatedAt": "2024-09-03T18:01:06Z",
      "closedAt": "2024-09-03T18:01:05Z",
      "comments": [
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "Good catch! Thank you!",
          "createdAt": "2024-09-01T21:24:52Z",
          "updatedAt": "2024-09-01T21:24:52Z"
        }
      ]
    },
    {
      "number": 47,
      "id": "I_kwDOKeDGj86XGDGM",
      "title": "New analysis",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/issues/47",
      "state": "CLOSED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "New analysis: https://link.springer.com/chapter/10.1007/978-981-97-7737-2_1\r\n\r\nI got a copy of the paper. To summarize:\r\n\r\n- With a 256 bit tag (they quote the construction used in the draft), AEGIS-256 could claim 256 bit security against forgery.\r\n- But with AEGIS-128L and a 256 bit tag, probably of a successful forgery is 2^-216, so > 2^-256.\r\n\r\nThe fact that a state collision on AEGIS-128L has a complexity above 2^128 but below 2^256 isn't new. This is why in the security guarantees section, we only guarantee 128 bit security regardless of the variant. \r\n\r\nWhat's new is the fact that we *could* claim 256 bit security against forgeries for AEGIS-256.\r\n\r\nI don't know if we should, or if we should remain conservative as this has little practical implications and further analysis may invalidate that claim.\r\n\r\nRegardless, that's one more paper we can cite.\r\n\r\n<img width=\"1315\" alt=\"Screenshot 2024-09-19 at 01 12 18\" src=\"https://github.com/user-attachments/assets/4870d50a-59a6-48b6-a137-e7704ad338f2\">\r\n<img width=\"995\" alt=\"Screenshot 2024-09-19 at 01 14 04\" src=\"https://github.com/user-attachments/assets/fb08dd04-ae38-4e78-a7a7-f5e13d86284a\">\r\n",
      "createdAt": "2024-09-18T23:30:03Z",
      "updatedAt": "2024-09-19T19:45:24Z",
      "closedAt": "2024-09-19T19:45:24Z",
      "comments": []
    },
    {
      "number": 50,
      "id": "I_kwDOKeDGj86Y9HN9",
      "title": "Addressing Scott Fluhrer's Review",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/issues/50",
      "state": "OPEN",
      "author": "samuel-lucas6",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The full version can be found [here](https://mailarchive.ietf.org/arch/msg/cfrg/ikGi2zb6CmWyQIVhuo8QR_GrOsA/).\r\n\r\n> You state that AEGIS-128L has \u201ca better security margin\u201d than AEGIS-128.  Citation?  Against what attack(s)?  A bigger state doesn\u2019t necessarily translate into a bigger security margin, and AEGIS-128 does 5 AES rounds per plaintext block, while AEGIS-128L does 4 \u2013 does the decrease in the number of rounds decrease the security margin (I don\u2019t know, but it\u2019s certainly not obvious either way)\r\n\r\nThere's already a citation in that sentence. From Ctrl+F, it says `the successful attack on 5-round AEGIS-128 cannot be applied to 5-round AEGIS-128L`. Do we want to cite any other papers?\r\n\r\nI'm not sure we should start naming attacks as this is the Introduction.\r\n\r\n> You state that \u201cThe AEGIS cipher family offers performance that significantly exceeds that of AES-GCM with hardware support\u201d \u2013 is this true?  Or, are you talking about a software implementation with \u201chardware support\u201d (e.g. VAES).  I believe that, for pure hardware, AES-GCM is significantly faster (because of the pipelinability and the parallelizability)\r\n\r\nAgain, there's a citation for this claim, although we could perhaps also cite your parallel modes paper. I think saying `with hardware support` rather than `hardware implementation` is clear enough, although I suppose we could also mention the performance for a hardware implementation separately. From a quick glance at a few papers, I'm unsure which is faster in hardware as some say GCM is slower and one seems to suggest it's faster, not that I know anything about this topic.\r\n\r\n> You state \u201c\u2026 an AEGIS key is not required after the setup phase\u201d.  However, when you look at the encrypt and decrypt procedures, they use the key as an input to the internal Init function.\r\n\r\nThe Authenticated Encryption/Decryption sections are being discussed here. We could rephrase `after the setup phase` to `after initialization` or `after calling Init()/the initialization function`.\r\n\r\n> Are the 256 bit tag lengths your own innovation?  They do not appear in the Caesar submission.  It\u2019s also unclear to me in what scenario a \u2018longer than 128 bit tag\u2019 would be required \u2013 are you worried about collisions?  I also note that for AEGIS-256, you can compute the 16 byte tag by xor\u2019ing the two halves of the 32 byte tag (but the same does not apply to AEGIS-128L).  I don\u2019t see how that leads to a weakness \u2013 it does look odd.\r\n\r\nGiven this wasn't in the CAESAR submission, this probably does warrant further explanation, like design rationale and references in Security Guarantees. However, we say why a 256-bit tag is important when discussing commitment in the Introduction.\r\n\r\n> AESRound \u2013 you might want to define that more explicitly; I don\u2019t know if it\u2019s obvious you mean to perform the SubBytes, Shiftrows and MixColumn operations on \u2018in\u2019 and then xor in \u2018rk\u2019.  For an internal function as fundamental (and nontrivial) as this, you might want to have several descriptions.\r\n\r\nI don't think this is a problem. We've basically said that and with a citation.\r\n\r\n> You mention about security in the \u201cQ1 model\u201d.  One suggestion (not a requirement for this review) would be to spell out what that \u201cQ1 model\u201d is; that is, an attack model where the attacker has access to a Quantum Computer, but is limited to classical (nonquantum) communications to the systems under attack.  I suspect that most implementors wouldn\u2019t don\u2019t know what \u201cQ1\u201d is.\r\n\r\nI think this is a good idea if it can be done in a sentence or two.\r\n\r\n> I did like the test vectors, the test vectors for the subcomponents makes things more straightforward.  Just one comment: for the 128L Update text vector, you might want to make M0 and M1 different (to catch cases where the implementation uses the wrong one).\r\n\r\nI presume we can do this without much trouble.",
      "createdAt": "2024-10-04T11:35:10Z",
      "updatedAt": "2024-10-05T10:29:18Z",
      "closedAt": null,
      "comments": [
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "> You state that AEGIS-128L has \u201ca better security margin\u201d than AEGIS-128. Citation? Against what attack(s)? A bigger state doesn\u2019t necessarily translate into a bigger security margin, and AEGIS-128 does 5 AES rounds per plaintext block, while AEGIS-128L does 4 \u2013 does the decrease in the number of rounds decrease the security margin (I don\u2019t know, but it\u2019s certainly not obvious either way)\r\n\r\nThe bigger state and more complex linear layer affects the security of the initialization phase, as well as the key stream.\r\n\r\nKeystream:\r\n- https://tosc.iacr.org/index.php/ToSC/article/view/8468/8034 shows that linear biases are smaller for 128L than 128.\r\n\r\nInitialization:\r\n-  https://academic.oup.com/comjnl/article-abstract/65/8/2221/6280579 shows that 128L is more secure than 128 against guess-and-determine attacks\r\n- https://tosc.iacr.org/index.php/ToSC/article/view/8907/8483 shows that 128L has better integral properties. Key recovery on 5 rounds (out of 10) i128 is demonstrated, but fails with the same number of rounds (also out of 10) for 128L.\r\n- https://ietresearch.onlinelibrary.wiley.com/doi/10.1049/ise2.12109 shows that 128L is secure against differential attacks after 3 rounds (out of 10) instead of 4 rounds for 128 (out of 10).\r\n\r\nThe fact that input blocks are passing into 4 AES rounds (for 128L) instead of 5 (for 128) mostly affect integrity, where  https://link.springer.com/chapter/10.1007/978-981-97-7737-2_1 shows that 128 has slightly better resistance against forgery. But I don't think this falls into the \"security margin\" category as much as the number of rounds required for security vs total number of rounds in initialization, especially given the huge margin with respect to the 128-bit security against forgery we claim in the document.",
          "createdAt": "2024-10-04T21:56:36Z",
          "updatedAt": "2024-10-04T21:56:36Z"
        },
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "> You state that \u201cThe AEGIS cipher family offers performance that significantly exceeds that of AES-GCM with hardware support\u201d \u2013 is this true? Or, are you talking about a software implementation with \u201chardware support\u201d (e.g. VAES). I believe that, for pure hardware, AES-GCM is significantly faster (because of the pipelinability and the parallelizability)\r\n\r\nHardware implementations are hard to compare for algorithms that can be parallelized, because the can perform very differently depending on the available area. Given the same area, I don't know which one would be more efficient. \r\n\r\nIn https://www.researchgate.net/publication/283542585_Efficient_Hardware_Accelerator_for_AEGIS-128_Authenticated_Encryption they describe large-area AEGIS as much faster than AES-GCM, but the benchmarked AES-GCM implementation may process blocks sequentially.\r\nMaybe we could replace \"with hardware support\" with \"on CPUs with AES instructions\"?\r\n\r\n\r\n",
          "createdAt": "2024-10-04T22:02:00Z",
          "updatedAt": "2024-10-04T22:02:00Z"
        },
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "> The Authenticated Encryption/Decryption sections are being discussed here. We could rephrase after the setup phase to after initialization or after calling Init()/the initialization function.\r\n\r\n\"setup phase\" was used to avoid a repetition, but if this is confusing, yes, we can explicitly name the function.",
          "createdAt": "2024-10-04T22:02:53Z",
          "updatedAt": "2024-10-04T22:02:53Z"
        },
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "> Are the 256 bit tag lengths your own innovation? They do not appear in the Caesar submission. It\u2019s also unclear to me in what scenario a \u2018longer than 128 bit tag\u2019 would be required \u2013 are you worried about collisions? I also note that for AEGIS-256, you can compute the 16 byte tag by xor\u2019ing the two halves of the 32 byte tag (but the same does not apply to AEGIS-128L). I don\u2019t see how that leads to a weakness \u2013 it does look odd.\r\n\r\nCollisions, better key commitment, more useful as a MAC, and https://link.springer.com/chapter/10.1007/978-981-97-7737-2_1 shows that AEGIS256 can claim 256-bit forgery security by di\ufb00erential attacks (and 216-bit security for 128L) with a 256-bit tag.\r\n\r\nThe finalization rounds provides full diffusion, so arbitrary words could be used to compute tags. The designers used a linear combination, which is akin to a sum of PRFs, only to improve randomness. We construct 256-bit tags exactly the same way.\r\n\r\nRegarding the fact that a 128 tag can be computed by xoring the halves of a 256 bit tag : in [section 9.1.1](https://www.ietf.org/archive/id/draft-irtf-cfrg-aegis-aead-12.html#section-9.1.1), we have: \"All AEGIS variants MUST be used in a nonce-respecting setting: for a given key, a nonce MUST only be used once, **even with different tag lengths**\", which covers this.\r\n",
          "createdAt": "2024-10-04T22:13:35Z",
          "updatedAt": "2024-10-04T22:44:21Z"
        },
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": ">> AESRound \u2013 you might want to define that more explicitly; I don\u2019t know if it\u2019s obvious you mean to perform the SubBytes, Shiftrows and MixColumn operations on \u2018in\u2019 and then xor in \u2018rk\u2019. For an internal function as fundamental (and nontrivial) as this, you might want to have several descriptions.\r\n\r\n> I don't think this is a problem. We've basically said that and with a citation.\r\n\r\nIn the primitives, we explicitly say \"which is the composition of the SubBytes, ShiftRows, MixColums and AddRoundKey transformations\", so I also don't think we could be more explicit. This has also been clear to all implementers so far.",
          "createdAt": "2024-10-04T22:15:38Z",
          "updatedAt": "2024-10-04T22:15:38Z"
        },
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "> > You mention about security in the \u201cQ1 model\u201d. One suggestion (not a requirement for this review) would be to spell out what that \u201cQ1 model\u201d is; that is, an attack model where the attacker has access to a Quantum Computer, but is limited to classical (nonquantum) communications to the systems under attack. I suspect that most implementors wouldn\u2019t don\u2019t know what \u201cQ1\u201d is.\r\n\r\n> I think this is a good idea if it can be done in a sentence or two.\r\n\r\nSure.\r\n\r\n> > I did like the test vectors, the test vectors for the subcomponents makes things more straightforward. Just one comment: for the 128L Update text vector, you might want to make M0 and M1 different (to catch cases where the implementation uses the wrong one).\r\n\r\n> I presume we can do this without much trouble.\r\n\r\nIndeed. I'll do that.",
          "createdAt": "2024-10-04T22:18:03Z",
          "updatedAt": "2024-10-04T22:18:03Z"
        },
        {
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "body": "> The bigger state and more complex linear layer affects the security of the initialization phase, as well as the key stream.\r\n\r\nThanks for the detailed reply. How do you feel about citing more papers for the `better security margin` claim? Citing all of them may be a bit over the top though, especially when we have references in the Security Guarantees section.\r\n\r\n> In https://www.researchgate.net/publication/283542585_Efficient_Hardware_Accelerator_for_AEGIS-128_Authenticated_Encryption they describe large-area AEGIS as much faster than AES-GCM, but the benchmarked AES-GCM implementation may process blocks sequentially.\r\n\r\nYeah, that was one paper I saw. Happy to leave that then.\r\n\r\n> Maybe we could replace \"with hardware support\" with \"on CPUs with AES instructions\"?\r\n\r\nThat sounds good. Perhaps `software implementations` should be reworded too, like `Similarly, software implementations not using AES instructions can also be faster`.\r\n\r\n> \"setup phase\" was used to avoid a repetition, but if this is confusing, yes, we can explicitly name the function.\r\n\r\nI'll do a PR for that.\r\n\r\n> The finalization rounds provides full diffusion, so arbitrary words could be used to compute tags. The designers used a linear combination, which is akin to a sum of PRFs, only to improve randomness. We construct 256-bit tags exactly the same way.\r\n\r\nDo you think it's worth a sentence saying that 256-bit tags weren't in the CAESAR submission but have been constructed in the same fashion? I remember Rocca-S doing the same. We could maybe cite that 256-bit tag paper.",
          "createdAt": "2024-10-05T10:29:17Z",
          "updatedAt": "2024-10-05T10:29:17Z"
        }
      ]
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOKeDGj85cR2bu",
      "title": "Document the AEGIS-128X and AEGIS-256X modes",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/pull/1",
      "state": "MERGED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Reopening the PR here, since the repo was moved to the CFRG org.\r\n\r\nDocument the parallel modes.\r\n\r\nIn order to reduce redundancy and the document size, inputs and outputs of individual functions haven't been duplicated.\r\n\r\nNot sure if we should (for clarity/consistency, maybe) or not.\r\n\r\nFixes https://github.com/jedisct1/draft-aegis-aead/issues/94",
      "createdAt": "2023-10-09T16:27:26Z",
      "updatedAt": "2023-10-20T18:28:46Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "baseRefName": "main",
      "baseRefOid": "016dad2310d341fa4353f0f00e669194a6775e84",
      "headRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "headRefName": "aegis-x",
      "headRefOid": "6e503d072b111b234f651db1a3e659860b231c42",
      "closedAt": "2023-10-20T18:28:41Z",
      "mergedAt": "2023-10-20T18:28:41Z",
      "mergedBy": "jedisct1",
      "mergeCommit": {
        "oid": "78756701e4507ab947e21d666b6367fb438d5849"
      },
      "comments": [
        {
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "body": "I think I'm going to have to leave reviewing this until the weekend if there's no rush. I've got quite a busy week, there's a lot to check over, and I'd like to compare it to your paper. I had a skim read of the text earlier, and it looked good aside from one or two things worth tweaking.\r\n\r\n> In order to reduce redundancy and the document size, inputs and outputs of individual functions haven't been duplicated.\r\n> Not sure if we should (for clarity/consistency, maybe) or not.\r\n\r\nThis is a difficult one. I think we could get away with it from a consistency perspective but perhaps not if it affects the clarity/requires lots of jumping around the document.",
          "createdAt": "2023-10-09T20:10:36Z",
          "updatedAt": "2023-10-09T20:10:36Z"
        },
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "From an implementation perspective, the parallel modes are likely to be implemented after the regular variants have been implemented.\r\n\r\nSo, the reader is expected to already be familiar with these functions and their parameters, that intentionally remain exactly the same.\r\n\r\n\r\n",
          "createdAt": "2023-10-09T20:23:47Z",
          "updatedAt": "2023-10-09T20:23:47Z"
        },
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "In the paper, `r` refers to the rate of the underlying AEGIS primitive, while in this document, `R` refers to the rate of the mode (= `r \u00b7 \u03bd` in the paper).\r\n\r\nThat can be confusing, but in implementations, only the mode rate is relevant, so that simplifies the specification quite a bit.",
          "createdAt": "2023-10-09T20:44:44Z",
          "updatedAt": "2023-10-09T21:02:00Z"
        },
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks a lot, Samuel! That was a lot to review.\r\n\r\nAll your comments should have been addressed.",
          "createdAt": "2023-10-17T07:48:59Z",
          "updatedAt": "2023-10-17T07:48:59Z"
        },
        {
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "body": "Well done Frank! Teamwork makes the dream work, but you did the hard part. I'll take a look later this week.",
          "createdAt": "2023-10-17T17:55:52Z",
          "updatedAt": "2023-10-17T17:55:52Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOKeDGj85kD7sq",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Sorry there's quite a lot to go through. Various things are up for debate. Hopefully haven't missed anything.",
          "createdAt": "2023-10-15T08:36:33Z",
          "updatedAt": "2023-10-15T11:20:19Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "This could be moved in the file so all the references are in alphabetical order if you still want to do that.",
              "createdAt": "2023-10-15T08:36:33Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 13,
              "body": "Currently [some](https://cfrg.github.io/draft-irtf-cfrg-aegis-aead/draft-irtf-cfrg-aegis-aead.html#name-normative-references) references have full dates (day/month/year) and others only have the year. We should probably be consistent with one approach. I don't think day/month are necessary.",
              "createdAt": "2023-10-15T08:38:36Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 18,
              "body": "Is it worth rearranging these to put the ones from CAESAR first like in the bullet points below?",
              "createdAt": "2023-10-15T08:42:07Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 32,
              "body": "> based on AEGIS-256X\r\n\r\nTypo.",
              "createdAt": "2023-10-15T08:42:51Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 77,
              "body": "Could add commas to break the sentence up:\r\n\r\n> Some CPUs, such as Intel and Intel-compatible CPUs with the VAES extensions, include...",
              "createdAt": "2023-10-15T08:47:50Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 81,
              "body": "> AEGIS-128L or AEGIS-256\r\n\r\nCould change to something like:\r\n\r\n> multiple AEGIS-128L and AEGIS-256 instances respectively, with distinct initial states.",
              "createdAt": "2023-10-15T08:52:07Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 83,
              "body": "> 2 parallel operations\r\n\r\nand\r\n\r\n> can be raised to 4.\r\n\r\nDo you prefer these as numbers?",
              "createdAt": "2023-10-15T08:55:56Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 89,
              "body": "Missing a full stop.",
              "createdAt": "2023-10-15T08:58:07Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 90,
              "body": "> WIth\r\n\r\nTypo.",
              "createdAt": "2023-10-15T08:58:38Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 91,
              "body": "> V[j,i]\r\n\r\nShould we have a space after the comma for these?",
              "createdAt": "2023-10-15T09:02:06Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 91,
              "body": "> `[0..D)`\r\n\r\nWhat's the rationale for a non-square bracket at the end?",
              "createdAt": "2023-10-15T09:04:45Z",
              "updatedAt": "2023-10-15T11:20:20Z"
            },
            {
              "originalPosition": 94,
              "body": "Can drop the comma.",
              "createdAt": "2023-10-15T09:08:04Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 87,
              "body": "Capitalise like the `Conventions and Definitions` section?",
              "createdAt": "2023-10-15T09:08:53Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 102,
              "body": "> AEGIS-128L and AEGIS-256 `Encrypt` function\r\n\r\nI feel like we should say `respectively` or something to clarify that AEGIS-128X maps to AEGIS-128L and AEGIS-256X maps to AEGIS-256.\r\n\r\n> `Encrypt` function, but processes\r\n\r\nCan drop the comma. This applies to all of the descriptions in each subsection (I won't keep adding a comment).\r\n\r\n> `R` bit\r\n\r\nAdd a hyphen or rephrase to what's said in `Decrypt()`.",
              "createdAt": "2023-10-15T09:13:14Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 89,
              "body": "Worth rephrasing to `the degree of parallelism`?",
              "createdAt": "2023-10-15T09:14:27Z",
              "updatedAt": "2023-10-15T11:20:20Z"
            },
            {
              "originalPosition": 131,
              "body": "See my comment on `Encrypt()`. If changing that, this will also need to be updated.",
              "createdAt": "2023-10-15T09:17:32Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 194,
              "body": "> ZeroPad(ctx)\r\n\r\nThis doesn't match the `Conventions and Definitions` section:\r\n\r\n> ZeroPad(x, n): padding operation. Trailing zeros are concatenated to x until the total length is a multiple of n bits.",
              "createdAt": "2023-10-15T09:25:02Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 187,
              "body": "I'm finding this bit confusing. It feels like `Update(nonce_v, key_v)` at the bottom takes too large of an input, and aren't the key and nonce the same? Why can't it be `Update(nonce, key)`?",
              "createdAt": "2023-10-15T09:26:45Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 194,
              "body": "Same with the line below.",
              "createdAt": "2023-10-15T09:27:28Z",
              "updatedAt": "2023-10-15T11:20:20Z"
            },
            {
              "originalPosition": 207,
              "body": "> `R` (`= 2 * 128 * D`) bits\r\n\r\nNot sure about this. How about moving the brackets after:\r\n\r\n> `R` bits (`2 * 128 * D`)\r\n\r\nBetter or worse?",
              "createdAt": "2023-10-15T09:37:57Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 207,
              "body": "> `M0` and `M1` are `128 * D` bits instead of 128 bits. `M0` and `M1` are split into 128-bit blocks, each of them updating a different AEGIS-128L state.\r\n\r\nPerhaps worth writing this without repeating `M0` and `M1`.",
              "createdAt": "2023-10-15T09:40:54Z",
              "updatedAt": "2023-10-15T11:20:20Z"
            },
            {
              "originalPosition": 187,
              "body": "Ok I think I get it; it's to do with the modified `Update()` function.",
              "createdAt": "2023-10-15T10:12:41Z",
              "updatedAt": "2023-10-15T11:20:20Z"
            },
            {
              "originalPosition": 339,
              "body": "Can drop the comma.",
              "createdAt": "2023-10-15T10:22:57Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 355,
              "body": "There's no empty line before `else:` in the AEGIS-128L section.",
              "createdAt": "2023-10-15T10:25:41Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 170,
              "body": "> initizalizes\r\n\r\nTypo.",
              "createdAt": "2023-10-15T10:29:52Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 375,
              "body": "> initizalizes\r\n\r\nTypo.",
              "createdAt": "2023-10-15T10:30:02Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 375,
              "body": "Comma can be dropped.",
              "createdAt": "2023-10-15T10:30:31Z",
              "updatedAt": "2023-10-15T11:20:20Z"
            },
            {
              "originalPosition": 170,
              "body": "Comma can be dropped.",
              "createdAt": "2023-10-15T10:30:40Z",
              "updatedAt": "2023-10-15T11:20:20Z"
            },
            {
              "originalPosition": 396,
              "body": "> k0n0_v\r\n\r\nand\r\n\r\n> k1n0_v\r\n\r\nTypos?",
              "createdAt": "2023-10-15T10:32:27Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 402,
              "body": "> ZeroPad(ctx)\r\n\r\nDoesn't match the `Conventions and Definitions` section as mentioned for AEGIS-128X:\r\n\r\n> ZeroPad(x, n): padding operation. Trailing zeros are concatenated to x until the total length is a multiple of n bits.",
              "createdAt": "2023-10-15T10:34:11Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 408,
              "body": "> ctx = Byte(i)\r\n\r\nWhy is this here?",
              "createdAt": "2023-10-15T10:35:04Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 411,
              "body": "> k0n0_v\r\n\r\nand\r\n\r\n> k1n1_v\r\n\r\nTypos? Or not defined as said above. I get that this should be `k0 ^ n0`/`k1 ^ n1`.",
              "createdAt": "2023-10-15T10:36:33Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 396,
              "body": "Or this isn't defined like `k0_v, k1_v = {}, {}`.",
              "createdAt": "2023-10-15T10:38:31Z",
              "updatedAt": "2023-10-15T11:20:20Z"
            },
            {
              "originalPosition": 396,
              "body": "`k0_v` and `k1_v` aren't in the loop.",
              "createdAt": "2023-10-15T10:40:15Z",
              "updatedAt": "2023-10-15T11:20:20Z"
            },
            {
              "originalPosition": 411,
              "body": "I think the paper has a mistake where it says to do just the halves of the nonce.",
              "createdAt": "2023-10-15T10:42:31Z",
              "updatedAt": "2023-10-15T11:20:20Z"
            },
            {
              "originalPosition": 424,
              "body": "See comments on AEGIS-128X with the `R` bits at once and whether to put the brackets before/after.",
              "createdAt": "2023-10-15T10:44:27Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 424,
              "body": "Not stating that `M is 128 * D bits instead of 128 bits` like in the AEGIS-128X section. Best to merge with the existing sentence if mentioning this.",
              "createdAt": "2023-10-15T10:46:03Z",
              "updatedAt": "2023-10-15T11:20:20Z"
            },
            {
              "originalPosition": 537,
              "body": "Can drop the comma.",
              "createdAt": "2023-10-15T10:54:12Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 547,
              "body": "> Update(t, t)\r\n\r\nShould be `Update(t)`.",
              "createdAt": "2023-10-15T10:55:38Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 553,
              "body": "There's no empty line here in the AEGIS-256 section.",
              "createdAt": "2023-10-15T10:56:27Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 565,
              "body": "> considerations\r\n\r\nCapitalise.",
              "createdAt": "2023-10-15T10:57:27Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 567,
              "body": "> AEGIS-128L and AEGIS-256X\r\n\r\nTypo for AEGIS-256.",
              "createdAt": "2023-10-15T10:58:01Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 569,
              "body": "Perhaps put this on the same line as the previous sentence.",
              "createdAt": "2023-10-15T10:58:36Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 571,
              "body": "> , or\r\n\r\nCan drop the comma in both cases.",
              "createdAt": "2023-10-15T10:59:15Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 571,
              "body": "Could just start with `In AEGIS-256X,`, but the `And` does work here.",
              "createdAt": "2023-10-15T11:02:45Z",
              "updatedAt": "2023-10-15T11:20:20Z"
            },
            {
              "originalPosition": 573,
              "body": "Could be put on the same line as the previous sentence assuming that's readable.\r\n\r\n`pseudo-code` can be written as one word without the hyphen.",
              "createdAt": "2023-10-15T11:04:30Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 575,
              "body": "> considerations\r\n\r\nCapitalise.",
              "createdAt": "2023-10-15T11:05:05Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 577,
              "body": "Can drop the comma.",
              "createdAt": "2023-10-15T11:05:34Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 579,
              "body": "> 512 bit wide\r\n\r\nBits? Or add a hyphen.",
              "createdAt": "2023-10-15T11:06:17Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 579,
              "body": "> the parallelism degrees implementations are encouraged to support are `2` and `4`\r\n\r\nThis part doesn't make sense.",
              "createdAt": "2023-10-15T11:07:37Z",
              "updatedAt": "2023-10-15T11:20:20Z"
            },
            {
              "originalPosition": 579,
              "body": "> The resulting algorithms SHOULD be named `AEGIS-128X2`, `AEGIS-128X4`, `AEGIS-256X2` and `AEGIS-256X4`.\r\n\r\nDo we not want this as MUST? Or `The resulting algorithms are called...`.\r\n\r\nThere can also be a comma before the last `and` for consistency with other sections.",
              "createdAt": "2023-10-15T11:08:18Z",
              "updatedAt": "2023-10-15T11:20:20Z"
            },
            {
              "originalPosition": 581,
              "body": "> implement it optimally\r\n\r\nI'd replace `it`.",
              "createdAt": "2023-10-15T11:10:07Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 583,
              "body": "Should we capitalise the headings? They are in `IANA Considerations`.",
              "createdAt": "2023-10-15T11:10:38Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 596,
              "body": "> Implementations MAY not include the parallel AEGIS modes.\r\n\r\nHow does this sound:\r\n\r\n> Implementations MAY choose not to include the parallel AEGIS modes.",
              "createdAt": "2023-10-15T11:13:40Z",
              "updatedAt": "2023-10-15T11:20:19Z"
            },
            {
              "originalPosition": 605,
              "body": "> , respectively, AEGIS-128L and AEGIS-256\r\n\r\nI'd rephrase to:\r\n\r\n> and requirements as AEGIS-128L and AEGIS-256 respectively.",
              "createdAt": "2023-10-15T11:14:36Z",
              "updatedAt": "2023-10-15T11:20:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kED4o",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-15T12:27:49Z",
          "updatedAt": "2023-10-15T12:27:49Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Nod. The year is enough.",
              "createdAt": "2023-10-15T12:27:49Z",
              "updatedAt": "2023-10-15T12:27:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kED82",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-15T12:28:52Z",
          "updatedAt": "2023-10-15T12:28:52Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "Sure. They were sorted by security level, but consistency is good.",
              "createdAt": "2023-10-15T12:28:52Z",
              "updatedAt": "2023-10-15T12:28:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kED97",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-15T12:29:22Z",
          "updatedAt": "2023-10-15T12:29:23Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "Good catch",
              "createdAt": "2023-10-15T12:29:23Z",
              "updatedAt": "2023-10-15T12:29:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kEN6u",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-15T16:41:39Z",
          "updatedAt": "2023-10-15T16:41:39Z",
          "comments": [
            {
              "originalPosition": 83,
              "body": "Having these as numbers helps to make the connection with `2X` and `4X`, but if it looks odd, I've nothing against `two` and `four`  ",
              "createdAt": "2023-10-15T16:41:39Z",
              "updatedAt": "2023-10-15T16:41:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kEN8s",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-15T16:42:14Z",
          "updatedAt": "2023-10-15T16:42:14Z",
          "comments": [
            {
              "originalPosition": 89,
              "body": "Sure!",
              "createdAt": "2023-10-15T16:42:14Z",
              "updatedAt": "2023-10-15T16:42:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kEOBI",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-15T16:44:17Z",
          "updatedAt": "2023-10-15T16:44:17Z",
          "comments": [
            {
              "originalPosition": 91,
              "body": "Square brackets mean inclusive, non-square brackets mean exclusive.",
              "createdAt": "2023-10-15T16:44:17Z",
              "updatedAt": "2023-10-15T16:44:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kG3O5",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-16T09:23:08Z",
          "updatedAt": "2023-10-16T09:23:09Z",
          "comments": [
            {
              "originalPosition": 91,
              "body": "> Should we have a space after the comma for these?\r\n\r\nI originally wrote them with a comma. However, in function definitions and calls, not having the comma improves readability: `f(v[I,j], k)` is more readable than `f(v[I, j], k)`.",
              "createdAt": "2023-10-16T09:23:08Z",
              "updatedAt": "2023-10-16T09:23:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kG4Rz",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-16T09:25:22Z",
          "updatedAt": "2023-10-16T09:25:22Z",
          "comments": [
            {
              "originalPosition": 102,
              "body": "Changed to: \"The `Encrypt` function of AEGIS-128X and AEGIS-256X is similar to, respectively, the AEGIS-128L and AEGIS-256 `Encrypt` function`\"\r\n\r\nDoes it sound ok for you?",
              "createdAt": "2023-10-16T09:25:22Z",
              "updatedAt": "2023-10-16T09:26:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kG4zD",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-16T09:26:27Z",
          "updatedAt": "2023-10-16T09:26:27Z",
          "comments": [
            {
              "originalPosition": 131,
              "body": "Changed the same way as the `Encrypt()` function.",
              "createdAt": "2023-10-16T09:26:27Z",
              "updatedAt": "2023-10-16T09:26:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kG5sP",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-16T09:28:19Z",
          "updatedAt": "2023-10-16T09:28:20Z",
          "comments": [
            {
              "originalPosition": 194,
              "body": "Fixed.",
              "createdAt": "2023-10-16T09:28:20Z",
              "updatedAt": "2023-10-16T09:28:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kG6cC",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-16T09:29:56Z",
          "updatedAt": "2023-10-16T09:29:56Z",
          "comments": [
            {
              "originalPosition": 187,
              "body": "Correct. The `Update()` function requires wider blocks than the non-parallel variants.",
              "createdAt": "2023-10-16T09:29:56Z",
              "updatedAt": "2023-10-16T09:29:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kG7Yd",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-16T09:32:00Z",
          "updatedAt": "2023-10-16T09:32:00Z",
          "comments": [
            {
              "originalPosition": 207,
              "body": "> > `R` (`= 2 * 128 * D`) bits\r\n> \r\n> Not sure about this. How about moving the brackets after:\r\n> \r\n> > `R` bits (`2 * 128 * D`)\r\n> \r\n> Better or worse?\r\n\r\nMoving the brackets after causes a unit mismatch. `2 * 128 * D` is a scalar, while `R bits` is a number of bits.",
              "createdAt": "2023-10-16T09:32:00Z",
              "updatedAt": "2023-10-16T09:32:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kG8Jf",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-16T09:33:42Z",
          "updatedAt": "2023-10-16T09:33:43Z",
          "comments": [
            {
              "originalPosition": 207,
              "body": "> > `M0` and `M1` are `128 * D` bits instead of 128 bits. `M0` and `M1` are split into 128-bit blocks, each of them updating a different AEGIS-128L state.\r\n> \r\n> Perhaps worth writing this without repeating `M0` and `M1`.\r\n\r\nIndeed.",
              "createdAt": "2023-10-16T09:33:42Z",
              "updatedAt": "2023-10-16T09:33:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kG8Tq",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-16T09:34:03Z",
          "updatedAt": "2023-10-16T09:34:03Z",
          "comments": [
            {
              "originalPosition": 339,
              "body": "dropped!",
              "createdAt": "2023-10-16T09:34:03Z",
              "updatedAt": "2023-10-16T09:34:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kG-G3",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-16T09:37:50Z",
          "updatedAt": "2023-10-16T09:37:50Z",
          "comments": [
            {
              "originalPosition": 355,
              "body": "With the `for` loop right before, I think having the empty lines seems to improve readability.\r\n\r\nHowever, this is inconsistent with other places where we use `else:` \r\n\r\nI added the empty line in the AEGIS-128L section as well. Let me know if you prefer to remove that empty line everywhere.",
              "createdAt": "2023-10-16T09:37:50Z",
              "updatedAt": "2023-10-16T09:37:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kG-r_",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-16T09:38:59Z",
          "updatedAt": "2023-10-16T09:38:59Z",
          "comments": [
            {
              "originalPosition": 170,
              "body": "Sure!",
              "createdAt": "2023-10-16T09:38:59Z",
              "updatedAt": "2023-10-16T09:39:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kKxqw",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-16T16:58:35Z",
          "updatedAt": "2023-10-16T16:58:36Z",
          "comments": [
            {
              "originalPosition": 579,
              "body": "Changed. Thank you!",
              "createdAt": "2023-10-16T16:58:35Z",
              "updatedAt": "2023-10-16T16:58:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kKyhA",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-16T17:00:45Z",
          "updatedAt": "2023-10-16T17:00:45Z",
          "comments": [
            {
              "originalPosition": 581,
              "body": "Replaced it with `for optimal performance`. Does that sound better?",
              "createdAt": "2023-10-16T17:00:45Z",
              "updatedAt": "2023-10-16T17:00:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kKyp8",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-16T17:01:06Z",
          "updatedAt": "2023-10-16T17:01:06Z",
          "comments": [
            {
              "originalPosition": 583,
              "body": "Capitalized!",
              "createdAt": "2023-10-16T17:01:06Z",
              "updatedAt": "2023-10-16T17:01:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kKy7t",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-16T17:01:53Z",
          "updatedAt": "2023-10-16T17:01:53Z",
          "comments": [
            {
              "originalPosition": 605,
              "body": "Better indeed!",
              "createdAt": "2023-10-16T17:01:53Z",
              "updatedAt": "2023-10-16T17:01:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kKzF1",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-16T17:02:18Z",
          "updatedAt": "2023-10-16T17:02:19Z",
          "comments": [
            {
              "originalPosition": 596,
              "body": "Better!",
              "createdAt": "2023-10-16T17:02:19Z",
              "updatedAt": "2023-10-16T17:02:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kK0Ge",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-16T17:04:55Z",
          "updatedAt": "2023-10-16T17:04:55Z",
          "comments": [
            {
              "originalPosition": 402,
              "body": "Fixed, thanks!",
              "createdAt": "2023-10-16T17:04:55Z",
              "updatedAt": "2023-10-16T17:04:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kK0Pw",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-16T17:05:19Z",
          "updatedAt": "2023-10-16T17:05:19Z",
          "comments": [
            {
              "originalPosition": 537,
              "body": "Dropped.",
              "createdAt": "2023-10-16T17:05:19Z",
              "updatedAt": "2023-10-16T17:05:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kK0mS",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-16T17:06:15Z",
          "updatedAt": "2023-10-16T17:06:16Z",
          "comments": [
            {
              "originalPosition": 569,
              "body": "Done.",
              "createdAt": "2023-10-16T17:06:15Z",
              "updatedAt": "2023-10-16T17:06:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kK07N",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-16T17:07:11Z",
          "updatedAt": "2023-10-16T17:07:11Z",
          "comments": [
            {
              "originalPosition": 571,
              "body": "\"or\" dropped, and \"And\" removed.",
              "createdAt": "2023-10-16T17:07:11Z",
              "updatedAt": "2023-10-16T17:07:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kK09-",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-16T17:07:18Z",
          "updatedAt": "2023-10-16T17:07:18Z",
          "comments": [
            {
              "originalPosition": 575,
              "body": "Done.",
              "createdAt": "2023-10-16T17:07:18Z",
              "updatedAt": "2023-10-16T17:07:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kK1Fy",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-16T17:07:39Z",
          "updatedAt": "2023-10-16T17:07:39Z",
          "comments": [
            {
              "originalPosition": 577,
              "body": "Comma removed.",
              "createdAt": "2023-10-16T17:07:39Z",
              "updatedAt": "2023-10-16T17:07:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kK-6V",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-16T17:33:33Z",
          "updatedAt": "2023-10-16T17:33:33Z",
          "comments": [
            {
              "originalPosition": 83,
              "body": "That's what I thought and makes sense. Perhaps we should leave it. The 2 looks odd to me compared to the 4 because it's mid-sentence, but they should obviously both be either numbers or words.",
              "createdAt": "2023-10-16T17:33:33Z",
              "updatedAt": "2023-10-16T17:34:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kLAMJ",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-16T17:35:50Z",
          "updatedAt": "2023-10-16T17:35:50Z",
          "comments": [
            {
              "originalPosition": 91,
              "body": "> Square brackets mean inclusive, non-square brackets mean exclusive.\r\n\r\nOk if that's common knowledge, that's fine. I was thinking about it like slicing arrays.\r\n\r\n> not having the comma improves readability\r\n\r\nYes, that makes sense.",
              "createdAt": "2023-10-16T17:35:50Z",
              "updatedAt": "2023-10-16T17:35:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kLCFT",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-16T17:40:39Z",
          "updatedAt": "2023-10-16T17:40:39Z",
          "comments": [
            {
              "originalPosition": 102,
              "body": "I think the respectively would be better after, but it's quite an awkward sentence. What do you think of these:\r\n\r\n> The Encrypt function of AEGIS-128X and AEGIS-256X is similar to the AEGIS-128L and AEGIS-256 Encrypt function respectively.\r\n\r\nor\r\n\r\n> The Encrypt functions of AEGIS-128X and AEGIS-256X are similar to the AEGIS-128L and AEGIS-256 Encrypt functions respectively.",
              "createdAt": "2023-10-16T17:40:39Z",
              "updatedAt": "2023-10-16T17:40:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kLCsW",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-16T17:42:22Z",
          "updatedAt": "2023-10-16T17:42:22Z",
          "comments": [
            {
              "originalPosition": 207,
              "body": "> Moving the brackets after causes a unit mismatch\r\n\r\nOk let's leave it. Do you prefer it with or without the `=` would be my other question?",
              "createdAt": "2023-10-16T17:42:22Z",
              "updatedAt": "2023-10-16T17:42:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kLDD2",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-16T17:43:21Z",
          "updatedAt": "2023-10-16T17:43:21Z",
          "comments": [
            {
              "originalPosition": 355,
              "body": "I will have a look, but that sounds like a good idea.",
              "createdAt": "2023-10-16T17:43:21Z",
              "updatedAt": "2023-10-16T17:43:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kLDub",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-16T17:45:12Z",
          "updatedAt": "2023-10-16T17:45:12Z",
          "comments": [
            {
              "originalPosition": 581,
              "body": "That does.",
              "createdAt": "2023-10-16T17:45:12Z",
              "updatedAt": "2023-10-16T17:45:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kOr4B",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-17T07:37:41Z",
          "updatedAt": "2023-10-17T07:37:42Z",
          "comments": [
            {
              "originalPosition": 102,
              "body": "Changed to:\r\n\r\n> The Encrypt function of AEGIS-128X and AEGIS-256X is similar to the AEGIS-128L and AEGIS-256 Encrypt function respectively\r\n\r\n\"respectively\" at the end looks odd to me, but I trust you :)",
              "createdAt": "2023-10-17T07:37:41Z",
              "updatedAt": "2023-10-17T07:37:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kOsOZ",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-17T07:38:27Z",
          "updatedAt": "2023-10-17T07:38:27Z",
          "comments": [
            {
              "originalPosition": 207,
              "body": "The `=` doesn't seem necessary. Let's remove it.",
              "createdAt": "2023-10-17T07:38:27Z",
              "updatedAt": "2023-10-17T07:38:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kOsU1",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-17T07:38:39Z",
          "updatedAt": "2023-10-17T07:38:39Z",
          "comments": [
            {
              "originalPosition": 408,
              "body": "Removed.",
              "createdAt": "2023-10-17T07:38:39Z",
              "updatedAt": "2023-10-17T07:38:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kOtOt",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-17T07:40:33Z",
          "updatedAt": "2023-10-17T07:40:33Z",
          "comments": [
            {
              "originalPosition": 411,
              "body": "`k0n0_v, k1n1_v = {}, {}` added.",
              "createdAt": "2023-10-17T07:40:33Z",
              "updatedAt": "2023-10-17T07:40:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kOtk1",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-17T07:41:18Z",
          "updatedAt": "2023-10-17T07:41:18Z",
          "comments": [
            {
              "originalPosition": 396,
              "body": "Fixed.",
              "createdAt": "2023-10-17T07:41:18Z",
              "updatedAt": "2023-10-17T07:41:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kOxhy",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-17T07:45:07Z",
          "updatedAt": "2023-10-17T07:45:07Z",
          "comments": [
            {
              "originalPosition": 424,
              "body": "Added the fact that M is 128*D bits.",
              "createdAt": "2023-10-17T07:45:07Z",
              "updatedAt": "2023-10-17T07:45:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kOzcb",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-17T07:46:25Z",
          "updatedAt": "2023-10-17T07:46:26Z",
          "comments": [
            {
              "originalPosition": 567,
              "body": "Good catch.",
              "createdAt": "2023-10-17T07:46:25Z",
              "updatedAt": "2023-10-17T07:46:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kOzs6",
          "commit": {
            "abbreviatedOid": "e5bf8c2"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-17T07:46:53Z",
          "updatedAt": "2023-10-17T07:46:54Z",
          "comments": [
            {
              "originalPosition": 573,
              "body": "Done.",
              "createdAt": "2023-10-17T07:46:53Z",
              "updatedAt": "2023-10-17T07:46:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kpOZR",
          "commit": {
            "abbreviatedOid": "bb9223c"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Finishing touches (I promise).",
          "createdAt": "2023-10-19T19:47:16Z",
          "updatedAt": "2023-10-19T20:34:36Z",
          "comments": [
            {
              "originalPosition": 121,
              "body": "> they are based on, but can\r\n\r\nComma can be removed. Didn't mention this before.",
              "createdAt": "2023-10-19T19:47:16Z",
              "updatedAt": "2023-10-19T20:35:00Z"
            },
            {
              "originalPosition": 144,
              "body": "> The `Encrypt` function of AEGIS-128X and AEGIS-256X is similar to the AEGIS-128L and AEGIS-256 `Encrypt` function respectively\r\n\r\nThe second `function` almost sounds like it needs to be `functions`. I'm wondering if we should reword this to something like:\r\n\r\n> The `Encrypt` function of AEGIS-128X and AEGIS-256X is similar to the `Encrypt` function of AEGIS-128L and AEGIS-256 respectively\r\n\r\nDoes that sound any better to you?",
              "createdAt": "2023-10-19T19:57:47Z",
              "updatedAt": "2023-10-19T20:34:36Z"
            },
            {
              "originalPosition": 173,
              "body": "Please see my new comment on `Encrypt()`. If changing that, this will also need to be updated again.",
              "createdAt": "2023-10-19T19:59:51Z",
              "updatedAt": "2023-10-19T20:34:36Z"
            },
            {
              "originalPosition": 355,
              "body": "I'm happy to leave the empty line. Is there an empty line in the AEGIS-256 section?\r\n\r\n\r\n[FD] -> Not sure why I can't respond to that comment, but yes, there's also an empty line in the AEGIS-256 section.",
              "createdAt": "2023-10-19T20:08:48Z",
              "updatedAt": "2023-10-19T21:46:24Z"
            },
            {
              "originalPosition": 433,
              "body": "> n0_v, n1_v = {}, {}\r\n\r\nThink this can be removed.",
              "createdAt": "2023-10-19T20:14:38Z",
              "updatedAt": "2023-10-19T20:34:36Z"
            },
            {
              "originalPosition": 618,
              "body": "> The parallelism degrees implementations are encouraged to support\r\n\r\nPerhaps rephrase to:\r\n\r\n> The degrees of parallelism implementations are encouraged to support\r\n\r\nI misread it the first time because of `degrees` and `implementations` being next to each other.",
              "createdAt": "2023-10-19T20:23:47Z",
              "updatedAt": "2023-10-19T20:34:36Z"
            },
            {
              "originalPosition": 249,
              "body": "> `M0` and `M1` are `128 * D` bits instead of 128 bits. They are split\r\n\r\nThis is definitely an improvement, but I noticed the wording for AEGIS-256X:\r\n\r\n> `M` is `128 * D` bits instead of 128 bits and is split into 128-bit blocks, each of them updating a different AEGIS-256 state.\r\n\r\nDo you want to combine the two sentences for AEGIS-128X or do you think it'll be more readable with them separate? For example:\r\n\r\n> `M0` and `M1` are `128 * D` bits instead of 128 bits but are split into 128-bit blocks,",
              "createdAt": "2023-10-19T20:31:47Z",
              "updatedAt": "2023-10-19T20:34:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kp5pr",
          "commit": {
            "abbreviatedOid": "bb9223c"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-19T21:36:14Z",
          "updatedAt": "2023-10-19T21:36:14Z",
          "comments": [
            {
              "originalPosition": 121,
              "body": "Removed!",
              "createdAt": "2023-10-19T21:36:14Z",
              "updatedAt": "2023-10-19T21:36:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kp8A2",
          "commit": {
            "abbreviatedOid": "bb9223c"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-19T21:39:29Z",
          "updatedAt": "2023-10-19T21:39:29Z",
          "comments": [
            {
              "originalPosition": 144,
              "body": "That sounds indeed better.\r\n\r\nMaybe a comma before \"respectively\" would be even better?",
              "createdAt": "2023-10-19T21:39:29Z",
              "updatedAt": "2023-10-19T21:39:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kp8I2",
          "commit": {
            "abbreviatedOid": "bb9223c"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-19T21:40:00Z",
          "updatedAt": "2023-10-19T21:40:00Z",
          "comments": [
            {
              "originalPosition": 433,
              "body": "Indeed.",
              "createdAt": "2023-10-19T21:40:00Z",
              "updatedAt": "2023-10-19T21:40:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kp8M6",
          "commit": {
            "abbreviatedOid": "bb9223c"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-19T21:40:16Z",
          "updatedAt": "2023-10-19T21:40:16Z",
          "comments": [
            {
              "originalPosition": 249,
              "body": "Combining the sentences is fine.",
              "createdAt": "2023-10-19T21:40:16Z",
              "updatedAt": "2023-10-19T21:40:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kp8py",
          "commit": {
            "abbreviatedOid": "bb9223c"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-19T21:42:10Z",
          "updatedAt": "2023-10-19T21:42:10Z",
          "comments": [
            {
              "originalPosition": 144,
              "body": "How about something like:\r\n\r\n> The Encrypt function of AEGIS-128X resembles that of AEGIS-128L, and similarly, the Encrypt function of AEGIS-256X mirrors that of AEGIS-256\r\n\r\n?",
              "createdAt": "2023-10-19T21:42:10Z",
              "updatedAt": "2023-10-19T21:42:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kp9QR",
          "commit": {
            "abbreviatedOid": "bb9223c"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-19T21:43:41Z",
          "updatedAt": "2023-10-19T21:43:42Z",
          "comments": [
            {
              "originalPosition": 144,
              "body": "or:\r\n\r\n> The Encrypt function of AEGIS-128X resembles that of AEGIS-128L, and likewise, the Encrypt function of AEGIS-256X is similar to that of AEGIS-256\r\n\r\n?\r\n\r\n",
              "createdAt": "2023-10-19T21:43:42Z",
              "updatedAt": "2023-10-19T21:43:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kp9qB",
          "commit": {
            "abbreviatedOid": "bb9223c"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-19T21:44:07Z",
          "updatedAt": "2023-10-19T21:44:07Z",
          "comments": [
            {
              "originalPosition": 618,
              "body": "Rephrased!",
              "createdAt": "2023-10-19T21:44:07Z",
              "updatedAt": "2023-10-19T21:44:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kxfeu",
          "commit": {
            "abbreviatedOid": "bb9223c"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T18:15:30Z",
          "updatedAt": "2023-10-20T18:15:30Z",
          "comments": [
            {
              "originalPosition": 144,
              "body": "I like both of your suggestions. My preference would probably be the first.",
              "createdAt": "2023-10-20T18:15:30Z",
              "updatedAt": "2023-10-20T18:15:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kxfvi",
          "commit": {
            "abbreviatedOid": "bb9223c"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T18:16:13Z",
          "updatedAt": "2023-10-20T18:16:14Z",
          "comments": [
            {
              "originalPosition": 173,
              "body": "Just a reminder that this will also need to be updated given your rephrasing.",
              "createdAt": "2023-10-20T18:16:13Z",
              "updatedAt": "2023-10-20T18:16:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kxhAn",
          "commit": {
            "abbreviatedOid": "bb9223c"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T18:20:22Z",
          "updatedAt": "2023-10-20T18:20:22Z",
          "comments": [
            {
              "originalPosition": 144,
              "body": "Changed to the first suggestion. Also updated the `Decrypt` counterpart.",
              "createdAt": "2023-10-20T18:20:22Z",
              "updatedAt": "2023-10-20T18:20:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kxhDT",
          "commit": {
            "abbreviatedOid": "bb9223c"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T18:20:32Z",
          "updatedAt": "2023-10-20T18:20:33Z",
          "comments": [
            {
              "originalPosition": 173,
              "body": "Yep!",
              "createdAt": "2023-10-20T18:20:32Z",
              "updatedAt": "2023-10-20T18:20:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85kxjwF",
          "commit": {
            "abbreviatedOid": "6e503d0"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM.",
          "createdAt": "2023-10-20T18:27:14Z",
          "updatedAt": "2023-10-20T18:27:14Z",
          "comments": []
        }
      ]
    },
    {
      "number": 2,
      "id": "PR_kwDOKeDGj85dZ-fL",
      "title": "Add a note on security against quantum attacks",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/pull/2",
      "state": "MERGED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "https://eprint.iacr.org/2023/1306.pdf analyses the security of AEGIS-128L and other ciphers in the Q2 model (which is highly impractical), but also mentions that all the schemes are secure in the Q1 model.",
      "createdAt": "2023-10-20T17:14:45Z",
      "updatedAt": "2023-10-20T18:55:21Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "baseRefName": "main",
      "baseRefOid": "78756701e4507ab947e21d666b6367fb438d5849",
      "headRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "headRefName": "quantum-attacks",
      "headRefOid": "1f3b029233ec90c7609176be19038b76f2a0c3fa",
      "closedAt": "2023-10-20T18:38:05Z",
      "mergedAt": "2023-10-20T18:38:05Z",
      "mergedBy": "samuel-lucas6",
      "mergeCommit": {
        "oid": "545a4e4e2aa83f6b4966d814111a958e84eda698"
      },
      "comments": [
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "How about moving \"and in Chapter 4 of {{AEGIS}}\" to the end?",
          "createdAt": "2023-10-20T18:17:41Z",
          "updatedAt": "2023-10-20T18:17:41Z"
        },
        {
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "body": "> How about moving \"and in Chapter 4 of {{AEGIS}}\" to the end?\r\n\r\nThat works too, although it's no longer in order of publication. I'll leave it up to you.",
          "createdAt": "2023-10-20T18:23:05Z",
          "updatedAt": "2023-10-20T18:23:05Z"
        },
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "Having these in order of publication is good. Let's just remove \"in chapter 4\", then.",
          "createdAt": "2023-10-20T18:27:38Z",
          "updatedAt": "2023-10-20T18:27:38Z"
        },
        {
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "body": "> Having these in order of publication is good. Let's just remove \"in chapter 4\", then.\r\n\r\nDo you want to keep the other `in`s? Because if not, you forgot to remove them :p Otherwise, feel free to merge.",
          "createdAt": "2023-10-20T18:32:34Z",
          "updatedAt": "2023-10-20T18:32:34Z"
        },
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "Better without the redundant \"in\"s !",
          "createdAt": "2023-10-20T18:33:39Z",
          "updatedAt": "2023-10-20T18:33:39Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOKeDGj85kxcBR",
          "commit": {
            "abbreviatedOid": "2777334"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Not related to this PR, but should we remove `in Chapter 4 of` so there only needs to be one `in` within this sentence:\r\n\r\n> Security analyses of AEGIS can be found in {{AEGIS}}, {{M14}}, {{ENP19}}, {{LIMS21}}, {{JLD21}}, {{STSI23}}, {{IR23}}, and {{BS23}}.",
          "createdAt": "2023-10-20T18:08:11Z",
          "updatedAt": "2023-10-20T18:08:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 4,
      "id": "PR_kwDOKeDGj85da3L7",
      "title": "Don't use \"AEGIS-128X<D>\" and \"AEGIS-256X<D>\" before defining them",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/pull/4",
      "state": "MERGED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We reference AEGIS-128X2, AEGIS-128X4, AEGIS-256X2 and AEGIS-256X4 in the Implementations Considerations section, but only define these names in the next section.",
      "createdAt": "2023-10-20T20:46:50Z",
      "updatedAt": "2023-10-21T17:44:48Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "baseRefName": "main",
      "baseRefOid": "f4bc64a5d47aea26402b9c41e8a1f5da00f313e5",
      "headRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "headRefName": "ic",
      "headRefOid": "d8d712fe8d81ee290a48f5df34acac1c808cd95e",
      "closedAt": "2023-10-21T17:44:48Z",
      "mergedAt": "2023-10-21T17:44:48Z",
      "mergedBy": "samuel-lucas6",
      "mergeCommit": {
        "oid": "f3c3c3a95e21143eba67c23d8feb30c19105dab7"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKeDGj85kz09j",
          "commit": {
            "abbreviatedOid": "d8d712f"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-21T17:44:34Z",
          "updatedAt": "2023-10-21T17:44:34Z",
          "comments": []
        }
      ]
    },
    {
      "number": 5,
      "id": "PR_kwDOKeDGj85da4QB",
      "title": "Mention that parallel modes are optional in their presentation",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/pull/5",
      "state": "MERGED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We present the parallel modes, specify them, and only then mention that they are optional. This is a bit late and can be easily overlooked.\r\n\r\nSo, mention this right in the first paragraph about these modes.",
      "createdAt": "2023-10-20T20:51:23Z",
      "updatedAt": "2023-10-21T18:19:33Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "baseRefName": "main",
      "baseRefOid": "f4bc64a5d47aea26402b9c41e8a1f5da00f313e5",
      "headRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "headRefName": "optional",
      "headRefOid": "6fb9d5e197212d7c328d5956cd0077363225c7f3",
      "closedAt": "2023-10-21T18:19:30Z",
      "mergedAt": "2023-10-21T18:19:30Z",
      "mergedBy": "jedisct1",
      "mergeCommit": {
        "oid": "cfd9e590655959f0fd88f7b949f5a73cea5099fd"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKeDGj85kz069",
          "commit": {
            "abbreviatedOid": "295dfae"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2023-10-21T17:43:03Z",
          "updatedAt": "2023-10-21T17:43:07Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "`The` should be removed from the start.",
              "createdAt": "2023-10-21T17:43:03Z",
              "updatedAt": "2023-10-21T17:43:07Z"
            }
          ]
        }
      ]
    },
    {
      "number": 6,
      "id": "PR_kwDOKeDGj85da6IK",
      "title": "Remove broken link",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/pull/6",
      "state": "MERGED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The (...){...} syntax doesn't render as a proper link.",
      "createdAt": "2023-10-20T20:59:42Z",
      "updatedAt": "2023-10-21T17:39:23Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "baseRefName": "main",
      "baseRefOid": "f4bc64a5d47aea26402b9c41e8a1f5da00f313e5",
      "headRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "headRefName": "link",
      "headRefOid": "17711fac7aaa391c260e382d91618393632c4074",
      "closedAt": "2023-10-21T17:39:22Z",
      "mergedAt": "2023-10-21T17:39:22Z",
      "mergedBy": "samuel-lucas6",
      "mergeCommit": {
        "oid": "14f5c96c37e3081189fe9b9ef5eda385f5cfd18a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKeDGj85kz0ol",
          "commit": {
            "abbreviatedOid": "17711fa"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-21T17:39:00Z",
          "updatedAt": "2023-10-21T17:39:00Z",
          "comments": []
        }
      ]
    },
    {
      "number": 8,
      "id": "PR_kwDOKeDGj85dbDlz",
      "title": "Avoid repetition of \"this document\"",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/pull/8",
      "state": "MERGED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "+ a blank line for readability.",
      "createdAt": "2023-10-20T21:46:54Z",
      "updatedAt": "2023-10-21T17:38:01Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "baseRefName": "main",
      "baseRefOid": "f4bc64a5d47aea26402b9c41e8a1f5da00f313e5",
      "headRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "headRefName": "this",
      "headRefOid": "ea5072e5e59b4b89c94b0da1d0cc7a5cb1b654d0",
      "closedAt": "2023-10-21T17:38:01Z",
      "mergedAt": "2023-10-21T17:38:00Z",
      "mergedBy": "samuel-lucas6",
      "mergeCommit": {
        "oid": "0a909cfa5d073ae6a82a345b3658b6b73438eacf"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKeDGj85kz0iG",
          "commit": {
            "abbreviatedOid": "ea5072e"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-21T17:37:40Z",
          "updatedAt": "2023-10-21T17:37:40Z",
          "comments": []
        }
      ]
    },
    {
      "number": 10,
      "id": "PR_kwDOKeDGj85dc81F",
      "title": "Add an Implementation Status section",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/pull/10",
      "state": "MERGED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #7",
      "createdAt": "2023-10-21T19:38:46Z",
      "updatedAt": "2023-10-22T08:38:34Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "baseRefName": "main",
      "baseRefOid": "cfd9e590655959f0fd88f7b949f5a73cea5099fd",
      "headRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "headRefName": "impl-status",
      "headRefOid": "77350d3cf7c9e3ee3fc7902b1aa978dcf7f17044",
      "closedAt": "2023-10-22T08:38:33Z",
      "mergedAt": "2023-10-22T08:38:33Z",
      "mergedBy": "samuel-lucas6",
      "mergeCommit": {
        "oid": "e577c45967dd0e721613929ea964faae51d647f5"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKeDGj85k0KEb",
          "commit": {
            "abbreviatedOid": "77350d3"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-22T08:38:10Z",
          "updatedAt": "2023-10-22T08:38:10Z",
          "comments": []
        }
      ]
    },
    {
      "number": 11,
      "id": "PR_kwDOKeDGj85dk_gk",
      "title": "Suggest hashing the associated data",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/pull/11",
      "state": "MERGED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #3",
      "createdAt": "2023-10-23T21:33:05Z",
      "updatedAt": "2023-10-24T17:50:30Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "baseRefName": "main",
      "baseRefOid": "c21975d6c7288d8bbd5697bfa062a0a9a518a818",
      "headRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "headRefName": "ad-hash",
      "headRefOid": "80fea82ef84d3d4d0e600dd1272b435708e7c128",
      "closedAt": "2023-10-24T17:50:19Z",
      "mergedAt": "2023-10-24T17:50:19Z",
      "mergedBy": "jedisct1",
      "mergeCommit": {
        "oid": "ac5e718c52d2e7219adc2b171751d0279f2570e1"
      },
      "comments": [
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "Thank you Samuel!",
          "createdAt": "2023-10-24T17:50:29Z",
          "updatedAt": "2023-10-24T17:50:29Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOKeDGj85lD8U9",
          "commit": {
            "abbreviatedOid": "80fea82"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-24T17:49:43Z",
          "updatedAt": "2023-10-24T17:49:43Z",
          "comments": []
        }
      ]
    },
    {
      "number": 12,
      "id": "PR_kwDOKeDGj85dlB9w",
      "title": "Remove backticks around function names",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/pull/12",
      "state": "MERGED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We don't do it anywhere else.",
      "createdAt": "2023-10-23T21:42:26Z",
      "updatedAt": "2023-10-24T17:41:27Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "baseRefName": "main",
      "baseRefOid": "c21975d6c7288d8bbd5697bfa062a0a9a518a818",
      "headRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "headRefName": "remove-backticks",
      "headRefOid": "843340206b1ad887c47ec1863c49c92b5d09a7df",
      "closedAt": "2023-10-24T17:39:59Z",
      "mergedAt": "2023-10-24T17:39:59Z",
      "mergedBy": "samuel-lucas6",
      "mergeCommit": {
        "oid": "4ac4a8e5b34cffb8ea6e514209c9dfbb35ac040e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKeDGj85lD4Ss",
          "commit": {
            "abbreviatedOid": "8433402"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Sorry for missing some of these things. Good catch.",
          "createdAt": "2023-10-24T17:39:39Z",
          "updatedAt": "2023-10-24T17:39:39Z",
          "comments": []
        }
      ]
    },
    {
      "number": 13,
      "id": "PR_kwDOKeDGj85dlDya",
      "title": "Ask IANA to register identifiers for the parallel modes",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/pull/13",
      "state": "MERGED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-10-23T21:49:48Z",
      "updatedAt": "2023-10-24T17:44:49Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "baseRefName": "main",
      "baseRefOid": "3e42cb55002449a77b772273b6284e7828f8af7f",
      "headRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "headRefName": "iana",
      "headRefOid": "e05d7017a333b2ccbb3680d9dc664789d8348a6b",
      "closedAt": "2023-10-24T17:42:57Z",
      "mergedAt": "2023-10-24T17:42:57Z",
      "mergedBy": "samuel-lucas6",
      "mergeCommit": {
        "oid": "61711026344295d79c9986a359c743723f4d3c8b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKeDGj85lD5kn",
          "commit": {
            "abbreviatedOid": "e05d701"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-24T17:42:43Z",
          "updatedAt": "2023-10-24T17:42:43Z",
          "comments": []
        }
      ]
    },
    {
      "number": 14,
      "id": "PR_kwDOKeDGj85eKyx2",
      "title": "AEGIS-X: include the parallelism degree in the context",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/pull/14",
      "state": "MERGED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This is a breaking change, and it is not strictly necessary, but since it is not too late, it may be desirable.\r\n\r\nCurrently, if a (key,nonce) is reused with different variants of the same security level, the key streams initialized with the same context will be the same.\r\n\r\nFor example, with AEGIS-128L and AEGIS-128X2, the 128L key stream will be the same as the first half of the 128X2 key stream.\r\n\r\nTags will be different, but reusing a (key,nonce) with different variants would still reveal the difference between the messages.\r\n\r\nWe can document that (key,nonce) pairs must not be reused with different algorithms.\r\n\r\nBut a better alternative would be to include the degree in the context.\r\n\r\nWe actually use (degree - 1), so that when the degree is 1, the context remains all-zero, and it doesn't break the equivalence between AEGIS-128L and AEGIS-128X1.",
      "createdAt": "2023-10-30T21:34:17Z",
      "updatedAt": "2023-11-06T01:04:59Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "baseRefName": "main",
      "baseRefOid": "b234ed37c69d2bf7edf77ec3605ec5d9f44da89d",
      "headRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "headRefName": "aegis-x-d",
      "headRefOid": "37fc91520a3359681ae61a1b6e27cfcc77e05dc9",
      "closedAt": "2023-11-06T01:04:56Z",
      "mergedAt": "2023-11-06T01:04:56Z",
      "mergedBy": "jedisct1",
      "mergeCommit": {
        "oid": "2b1cfaa0145f67f30a93a81e37a5e12c08830565"
      },
      "comments": [
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "If you agree with that change, the paper will be updated as well.",
          "createdAt": "2023-10-30T21:37:27Z",
          "updatedAt": "2023-10-30T21:37:27Z"
        },
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "Hi @samuel-lucas6 , whenever it's convenient for you, could you take a look at this? It would be great to tag a new version with the parallel variants.",
          "createdAt": "2023-11-04T17:00:52Z",
          "updatedAt": "2023-11-04T17:00:52Z"
        },
        {
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "body": "Sorry Frank, I was on holiday. I'll take a look tomorrow morning. It sounds sensible, and it's a good idea to also update the paper.",
          "createdAt": "2023-11-04T20:42:31Z",
          "updatedAt": "2023-11-04T20:42:31Z"
        },
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "No worries Samuel! Vacations are more important than anything \ud83d\ude0a",
          "createdAt": "2023-11-04T22:22:49Z",
          "updatedAt": "2023-11-04T22:22:49Z"
        },
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "The `ZeroPad` repetition was originally there because the context itself was the byte, not the padding.\r\n\r\nBut that didn't really match the way it would actually be implemented. Describing it as a mask solved it :)",
          "createdAt": "2023-11-05T20:37:44Z",
          "updatedAt": "2023-11-05T20:37:44Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOKeDGj85mKNkt",
          "commit": {
            "abbreviatedOid": "018f79c"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Looks good. One potential change I can see. The `ZeroPad()` once is an improvement.",
          "createdAt": "2023-11-05T10:06:52Z",
          "updatedAt": "2023-11-05T10:19:39Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "It's perhaps worth rephrasing this without the colon due to the colon on the left.",
              "createdAt": "2023-11-05T10:06:52Z",
              "updatedAt": "2023-11-05T10:19:39Z"
            },
            {
              "originalPosition": 5,
              "body": "Could be `context separator. This is a 128-bit mask...` or similar.",
              "createdAt": "2023-11-05T10:19:31Z",
              "updatedAt": "2023-11-05T10:19:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85mKlly",
          "commit": {
            "abbreviatedOid": "018f79c"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-05T20:34:25Z",
          "updatedAt": "2023-11-05T20:34:26Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "It sounds indeed better without the column. Your suggestion was merged. Thank you Samuel!",
              "createdAt": "2023-11-05T20:34:25Z",
              "updatedAt": "2023-11-05T20:34:26Z"
            }
          ]
        }
      ]
    },
    {
      "number": 18,
      "id": "PR_kwDOKeDGj85eX6rj",
      "title": "Add test vectors in JSON format",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/pull/18",
      "state": "MERGED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The Python code is horrible, but the resulting JSON files can still be very useful to test implementations.\r\n\r\nFixes #9 ",
      "createdAt": "2023-11-01T21:08:30Z",
      "updatedAt": "2023-11-05T11:15:25Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "baseRefName": "main",
      "baseRefOid": "b234ed37c69d2bf7edf77ec3605ec5d9f44da89d",
      "headRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "headRefName": "test-vectors",
      "headRefOid": "8bfbebbed0f7341b5f1eebecb39df21cf1abd056",
      "closedAt": "2023-11-05T11:15:25Z",
      "mergedAt": "2023-11-05T11:15:25Z",
      "mergedBy": "samuel-lucas6",
      "mergeCommit": {
        "oid": "122b8e33140262677c6b8535ca76719db95fd1e0"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKeDGj85mKQJb",
          "commit": {
            "abbreviatedOid": "8bfbebb"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-11-05T11:13:56Z",
          "updatedAt": "2023-11-05T11:13:56Z",
          "comments": []
        }
      ]
    },
    {
      "number": 21,
      "id": "PR_kwDOKeDGj85e0F2y",
      "title": "\"respectively\" doesn't seem necessary here.",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/pull/21",
      "state": "MERGED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Also, the AEGIS paper is unlikely to change. We shouldn't give the feeling that it's still a moving target.",
      "createdAt": "2023-11-07T14:26:18Z",
      "updatedAt": "2023-11-07T18:34:24Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "baseRefName": "main",
      "baseRefOid": "009d4c61548b3bbd976839dbbd3c2330b70aadaa",
      "headRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "headRefName": "dif-fin",
      "headRefOid": "3b32b1f58f6089afa0b64b3f703b084081ce3a1d",
      "closedAt": "2023-11-07T18:34:24Z",
      "mergedAt": "2023-11-07T18:34:24Z",
      "mergedBy": "samuel-lucas6",
      "mergeCommit": {
        "oid": "3b0411933a6b4520c0ecc98a9e913c9d524cf280"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKeDGj85mbXJm",
          "commit": {
            "abbreviatedOid": "3b32b1f"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-11-07T18:33:59Z",
          "updatedAt": "2023-11-07T18:33:59Z",
          "comments": []
        }
      ]
    },
    {
      "number": 22,
      "id": "PR_kwDOKeDGj85fENF7",
      "title": "Say bytes instead of octets",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/pull/22",
      "state": "MERGED",
      "author": "samuel-lucas6",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Let me know what you think of the sentence placement and phrasing.",
      "createdAt": "2023-11-09T18:41:57Z",
      "updatedAt": "2023-11-09T19:59:28Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "baseRefName": "main",
      "baseRefOid": "3b0411933a6b4520c0ecc98a9e913c9d524cf280",
      "headRepository": "samuel-lucas6/draft-irtf-cfrg-aegis-aead",
      "headRefName": "main",
      "headRefOid": "4445b28351c38355b48c7fdb03fec0fd27014d59",
      "closedAt": "2023-11-09T19:59:20Z",
      "mergedAt": "2023-11-09T19:59:20Z",
      "mergedBy": "jedisct1",
      "mergeCommit": {
        "oid": "f8190ca5a9d45884ee1f15b9111ca27865f50b52"
      },
      "comments": [
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "Not a big fan of \"instead of\" (-> \"why didn't you use 'octet', then?\")\r\n\r\nHow about \"interchangeably with\" instead?",
          "createdAt": "2023-11-09T18:46:21Z",
          "updatedAt": "2023-11-09T18:46:21Z"
        },
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "Thank you Samuel!",
          "createdAt": "2023-11-09T19:59:28Z",
          "updatedAt": "2023-11-09T19:59:28Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 23,
      "id": "PR_kwDOKeDGj85fNas2",
      "title": "Mention that AEGIS must not be used as a hash function",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/pull/23",
      "state": "MERGED",
      "author": "samuel-lucas6",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #19.",
      "createdAt": "2023-11-11T11:28:40Z",
      "updatedAt": "2023-11-11T17:30:45Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "baseRefName": "main",
      "baseRefOid": "f8190ca5a9d45884ee1f15b9111ca27865f50b52",
      "headRepository": "samuel-lucas6/draft-irtf-cfrg-aegis-aead",
      "headRefName": "main",
      "headRefOid": "4e0e2b660fa5ef88ee50c6995f61cbdeb7c44e78",
      "closedAt": "2023-11-11T17:30:45Z",
      "mergedAt": "2023-11-11T17:30:45Z",
      "mergedBy": "jedisct1",
      "mergeCommit": {
        "oid": "82e74af44e303f540c041b2982714b5366fcfa4f"
      },
      "comments": [
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "Looks good!\r\n\r\nThank you Samuel!",
          "createdAt": "2023-11-11T17:30:42Z",
          "updatedAt": "2023-11-11T17:30:42Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOKeDGj85m4cM5",
          "commit": {
            "abbreviatedOid": "40f81b9"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-11T14:25:59Z",
          "updatedAt": "2023-11-11T14:26:00Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "\"performing encryption with the message\" can be a bit confusing, as we don't encrypt anything. Maybe replace it with \"by calling the `Encrypt()` function\"?",
              "createdAt": "2023-11-11T14:25:59Z",
              "updatedAt": "2023-11-11T14:26:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85m4cN-",
          "commit": {
            "abbreviatedOid": "40f81b9"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-11T14:26:42Z",
          "updatedAt": "2023-11-11T14:26:42Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "\"Both algorithms\" -> maybe \"All the variants\"?",
              "createdAt": "2023-11-11T14:26:42Z",
              "updatedAt": "2023-11-11T14:26:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85m4dUE",
          "commit": {
            "abbreviatedOid": "40f81b9"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-11T15:10:27Z",
          "updatedAt": "2023-11-11T15:10:27Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Both good suggestions. I put `Both algorithms` because that was used for the nonce-respecting setting part, which we might want to change.",
              "createdAt": "2023-11-11T15:10:27Z",
              "updatedAt": "2023-11-11T15:10:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85m4dWt",
          "commit": {
            "abbreviatedOid": "40f81b9"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-11-11T15:11:55Z",
          "updatedAt": "2023-11-11T15:11:55Z",
          "comments": [
            {
              "originalPosition": 4,
              "body": "Now I'm debating `Each variant`, but then `However, they` may have to change.",
              "createdAt": "2023-11-11T15:11:55Z",
              "updatedAt": "2023-11-11T15:12:49Z"
            }
          ]
        }
      ]
    },
    {
      "number": 24,
      "id": "PR_kwDOKeDGj85fq1iG",
      "title": "Mention that different variants produce different ciphertexts and tags",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/pull/24",
      "state": "MERGED",
      "author": "samuel-lucas6",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #16.",
      "createdAt": "2023-11-16T19:23:40Z",
      "updatedAt": "2023-11-16T21:26:01Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "baseRefName": "main",
      "baseRefOid": "82e74af44e303f540c041b2982714b5366fcfa4f",
      "headRepository": "samuel-lucas6/draft-irtf-cfrg-aegis-aead",
      "headRefName": "main",
      "headRefOid": "e1fd8b7caacf836fd01290b20b17b22a23dd755e",
      "closedAt": "2023-11-16T21:26:01Z",
      "mergedAt": "2023-11-16T21:26:01Z",
      "mergedBy": "jedisct1",
      "mergeCommit": {
        "oid": "ee96ea581414cef6afcf36f131e08e65cdd92f4f"
      },
      "comments": [
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "Looks good!\r\n\r\nThat was tricky to explain, but you did a wonderful job at it!",
          "createdAt": "2023-11-16T21:25:57Z",
          "updatedAt": "2023-11-16T21:25:57Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 25,
      "id": "PR_kwDOKeDGj85f1yf6",
      "title": "Fix missing RFC links",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/pull/25",
      "state": "MERGED",
      "author": "samuel-lucas6",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Spotted these the other day. The other links/references appear to be fine.",
      "createdAt": "2023-11-19T14:11:21Z",
      "updatedAt": "2023-11-19T16:51:25Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "baseRefName": "main",
      "baseRefOid": "ee96ea581414cef6afcf36f131e08e65cdd92f4f",
      "headRepository": "samuel-lucas6/draft-irtf-cfrg-aegis-aead",
      "headRefName": "main",
      "headRefOid": "10ec7e03554219226f44bb9982c83a8048050f18",
      "closedAt": "2023-11-19T16:51:25Z",
      "mergedAt": "2023-11-19T16:51:25Z",
      "mergedBy": "jedisct1",
      "mergeCommit": {
        "oid": "9c82d660b43b13bbf70c00569668753cfc7d399a"
      },
      "comments": [
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "Good catch!",
          "createdAt": "2023-11-19T16:51:20Z",
          "updatedAt": "2023-11-19T16:51:20Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 27,
      "id": "PR_kwDOKeDGj85hIhg8",
      "title": "Remove documentation on TLS / DTLS / QUIC",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/pull/27",
      "state": "MERGED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Including the TLS code points.\r\n\r\nFixes #26",
      "createdAt": "2023-12-05T06:15:12Z",
      "updatedAt": "2023-12-05T14:55:06Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "baseRefName": "main",
      "baseRefOid": "d9e92df5aa692728580ce1439ba1a8079f8d86dc",
      "headRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "headRefName": "remove-protocol-bits",
      "headRefOid": "34d8dfa5bc081e12c843415d4b63613cf285bebf",
      "closedAt": "2023-12-05T14:55:01Z",
      "mergedAt": "2023-12-05T14:55:01Z",
      "mergedBy": "jedisct1",
      "mergeCommit": {
        "oid": "3e08062f3cb3b45a110fcc732e64a9ea1bcf94bd"
      },
      "comments": [
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "/cc @ekr\r\n",
          "createdAt": "2023-12-05T14:17:08Z",
          "updatedAt": "2023-12-05T14:17:08Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 28,
      "id": "PR_kwDOKeDGj85hdWtk",
      "title": "Mention the unit of \"len\" in the Stream() function",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/pull/28",
      "state": "MERGED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Implementations can use a different unit, but when the function is used in other documents, having a well-defined unit is useful.",
      "createdAt": "2023-12-07T19:53:28Z",
      "updatedAt": "2023-12-07T21:04:36Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "baseRefName": "main",
      "baseRefOid": "3e08062f3cb3b45a110fcc732e64a9ea1bcf94bd",
      "headRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "headRefName": "stream-units",
      "headRefOid": "fc3bd795ff8e237a9dd5d0214bc65f49fa48b24b",
      "closedAt": "2023-12-07T21:04:32Z",
      "mergedAt": "2023-12-07T21:04:32Z",
      "mergedBy": "jedisct1",
      "mergeCommit": {
        "oid": "c8143d5fcf53b6e21d3e5edabf078614e5c4103e"
      },
      "comments": [
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "Thank you Samuel!\r\n\r\n",
          "createdAt": "2023-12-07T21:04:29Z",
          "updatedAt": "2023-12-07T21:04:29Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOKeDGj85pkPdt",
          "commit": {
            "abbreviatedOid": "fc3bd79"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "This makes a lot of sense. I've removed a comma to match previous `Inputs:` sections.",
          "createdAt": "2023-12-07T20:49:58Z",
          "updatedAt": "2023-12-07T20:49:58Z",
          "comments": []
        }
      ]
    },
    {
      "number": 30,
      "id": "PR_kwDOKeDGj85kIUnI",
      "title": "Try to align with the aead-properties draft",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/pull/30",
      "state": "MERGED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #29 ",
      "createdAt": "2024-01-15T22:45:10Z",
      "updatedAt": "2024-01-17T21:29:56Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "baseRefName": "main",
      "baseRefOid": "c8143d5fcf53b6e21d3e5edabf078614e5c4103e",
      "headRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "headRefName": "alignment",
      "headRefOid": "34e0a17b13f873e72ed80ae4c37c79f75a089e00",
      "closedAt": "2024-01-17T21:29:52Z",
      "mergedAt": "2024-01-17T21:29:52Z",
      "mergedBy": "jedisct1",
      "mergeCommit": {
        "oid": "43dae76598ba1e28cc7a86319e3243b36ebcbffc"
      },
      "comments": [
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "@samuel-lucas6 Do you think you could review this these changes this week? It would be good to start the RGLC process soon.",
          "createdAt": "2024-01-16T10:58:07Z",
          "updatedAt": "2024-01-16T10:58:07Z"
        },
        {
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "body": "> @samuel-lucas6 Do you think you could review this these changes this week? It would be good to start the RGLC process soon.\r\n\r\nYep, I'll have a look in a minute. I was planning to do this PR but didn't get around to it.",
          "createdAt": "2024-01-16T17:58:24Z",
          "updatedAt": "2024-01-16T17:58:24Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOKeDGj85svzAf",
          "commit": {
            "abbreviatedOid": "860d057"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Here's some feedback/points of discussion.",
          "createdAt": "2024-01-16T18:00:09Z",
          "updatedAt": "2024-01-16T18:21:51Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Do we want to cite [this](https://link.springer.com/chapter/10.1007/978-3-319-59870-3_2) instead?",
              "createdAt": "2024-01-16T18:00:09Z",
              "updatedAt": "2024-01-16T18:21:51Z"
            },
            {
              "originalPosition": 5,
              "body": "If not, this looks fine.",
              "createdAt": "2024-01-16T18:01:53Z",
              "updatedAt": "2024-01-16T18:21:51Z"
            },
            {
              "originalPosition": 53,
              "body": "Rephrase to `All algorithms` or `All AEGIS variants`?",
              "createdAt": "2024-01-16T18:05:19Z",
              "updatedAt": "2024-01-16T18:21:51Z"
            },
            {
              "originalPosition": 68,
              "body": "I would change `ampler`. Maybe something like `provide even larger nonces`.",
              "createdAt": "2024-01-16T18:09:38Z",
              "updatedAt": "2024-01-16T18:21:51Z"
            },
            {
              "originalPosition": 68,
              "body": "Having said that, I'm not sure if this belongs in this section. This sounds more like something for the introduction and somewhat repeats what's said directly above (no practical limits).",
              "createdAt": "2024-01-16T18:10:42Z",
              "updatedAt": "2024-01-16T18:21:51Z"
            },
            {
              "originalPosition": 70,
              "body": "Is it worth saying something like `There are two ways to mitigate multi-target attacks, namely use an AEGIS variant with a 256-bit key and/or encode a key identifier in the nonce`. And then perhaps an example of a key identifier (e.g. random bits)? Otherwise, I like what you've put.",
              "createdAt": "2024-01-16T18:17:59Z",
              "updatedAt": "2024-01-16T18:21:51Z"
            },
            {
              "originalPosition": 78,
              "body": "`doesn't` to `does not` and `The reforgeability reilience...`. It would be good if these two sentences could flow together a bit more somehow.",
              "createdAt": "2024-01-16T18:20:52Z",
              "updatedAt": "2024-01-16T18:21:51Z"
            },
            {
              "originalPosition": 85,
              "body": "Add back the final comma.",
              "createdAt": "2024-01-16T18:21:23Z",
              "updatedAt": "2024-01-16T18:21:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85swwmo",
          "commit": {
            "abbreviatedOid": "860d057"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-16T19:20:49Z",
          "updatedAt": "2024-01-16T19:20:49Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "They've been published at the same time, so I assume they are the same. However, the PDF version is far more readable than the publicly accessible content on Springer.",
              "createdAt": "2024-01-16T19:20:49Z",
              "updatedAt": "2024-01-16T19:20:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85sw3n8",
          "commit": {
            "abbreviatedOid": "860d057"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-16T19:26:56Z",
          "updatedAt": "2024-01-16T19:26:56Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "Maybe there's some confusion here.\r\n\r\nA key identifier can be included both in 128-bit and 256-bit variants.\r\n\r\nIn 128-bit variants, 96-bit can be used like other AEADs, leaving 32 bits to encode a key ID.\r\nIn 256-bit variants, there's plenty of room so that even with 192-bit nonces, there's still 96 bits left to encode a key ID.\r\n\r\nThe mitigation is the same in both cases.",
              "createdAt": "2024-01-16T19:26:56Z",
              "updatedAt": "2024-01-16T19:26:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85sw76d",
          "commit": {
            "abbreviatedOid": "860d057"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-16T19:32:53Z",
          "updatedAt": "2024-01-16T19:32:53Z",
          "comments": [
            {
              "originalPosition": 68,
              "body": "`ampler` changed, thanks!\r\n\r\nMaybe something like `even with nonces made of 192 random bits, 64 additional bits remain available to optionally encode additional information`?",
              "createdAt": "2024-01-16T19:32:53Z",
              "updatedAt": "2024-01-16T19:32:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85sxBDO",
          "commit": {
            "abbreviatedOid": "860d057"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-16T19:40:00Z",
          "updatedAt": "2024-01-16T19:40:00Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "The format of a key identifier is really application-specific. It can be a user ID. It can be a SQL primary key. It can be a timestamp. So I'd rather not enter that territory. \r\n\r\nIt would be also good to keep that section short. Multi-user security is good, but with a large key space, not a practical concern. We shouldn't put too much emphasis on it; people may think that AEGIS requires a peculiar nonce format to be secure.",
              "createdAt": "2024-01-16T19:40:00Z",
              "updatedAt": "2024-01-16T19:41:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85sxWNw",
          "commit": {
            "abbreviatedOid": "860d057"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-16T20:09:50Z",
          "updatedAt": "2024-01-16T20:09:50Z",
          "comments": [
            {
              "originalPosition": 68,
              "body": "`an extra 32 bits` -> `32 extra bits` maybe?",
              "createdAt": "2024-01-16T20:09:50Z",
              "updatedAt": "2024-01-16T20:09:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85s9ItD",
          "commit": {
            "abbreviatedOid": "860d057"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-17T18:48:53Z",
          "updatedAt": "2024-01-17T18:48:54Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "The Publication info says 'Minor revision', but it's not clear to me if that's for the ePrint or Springer version. I also like open access though, and the date is similar enough that we can probably leave it.",
              "createdAt": "2024-01-17T18:48:54Z",
              "updatedAt": "2024-01-17T18:48:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85s9Kw_",
          "commit": {
            "abbreviatedOid": "860d057"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-17T18:54:08Z",
          "updatedAt": "2024-01-17T18:54:08Z",
          "comments": [
            {
              "originalPosition": 68,
              "body": "I'm indifferent to the 32 extra bits part so whatever you prefer.\r\n\r\nI think it's good to mention the extra bits for other information but perhaps not saying `nonces made of 192 random bits` because the whole parameter is also called the nonce.",
              "createdAt": "2024-01-17T18:54:08Z",
              "updatedAt": "2024-01-17T19:03:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85s9MBU",
          "commit": {
            "abbreviatedOid": "860d057"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-17T18:57:25Z",
          "updatedAt": "2024-01-17T18:57:25Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "What I meant was instead of doing a key identifier, you can use a 256-bit key. Just thinking for completeness really.\r\n\r\nFair enough about the format, and you're right.",
              "createdAt": "2024-01-17T18:57:25Z",
              "updatedAt": "2024-01-17T18:57:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85s9MIe",
          "commit": {
            "abbreviatedOid": "860d057"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-17T18:57:44Z",
          "updatedAt": "2024-01-17T18:57:45Z",
          "comments": [
            {
              "originalPosition": 68,
              "body": "Maybe just `With 192 random bits, 64 additional bits...` ?",
              "createdAt": "2024-01-17T18:57:45Z",
              "updatedAt": "2024-01-17T18:57:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85s9Ma_",
          "commit": {
            "abbreviatedOid": "8ff8a23"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-17T18:58:29Z",
          "updatedAt": "2024-01-17T18:58:30Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Duplicate `provide`.",
              "createdAt": "2024-01-17T18:58:30Z",
              "updatedAt": "2024-01-17T18:58:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85s9N6A",
          "commit": {
            "abbreviatedOid": "8ff8a23"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-17T19:02:32Z",
          "updatedAt": "2024-01-17T19:02:32Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "Could we say something like `AEGIS has been shown to have reforgeability resilience {{FLLW17}}. Without the ability to...`? Or keep the first sentence but change the second sentence to `This property is known as reforgeability resilience.` and do the citation the sentence before?",
              "createdAt": "2024-01-17T19:02:32Z",
              "updatedAt": "2024-01-17T19:03:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85s9PwK",
          "commit": {
            "abbreviatedOid": "860d057"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-17T19:07:40Z",
          "updatedAt": "2024-01-17T19:07:40Z",
          "comments": [
            {
              "originalPosition": 68,
              "body": "Yep that works for me.",
              "createdAt": "2024-01-17T19:07:40Z",
              "updatedAt": "2024-01-17T19:07:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85s9TZa",
          "commit": {
            "abbreviatedOid": "860d057"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-17T19:17:49Z",
          "updatedAt": "2024-01-17T19:17:49Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "With repeated nonces, even with a 256-bit key, security will degrade with the number of targeted keys. With a very large key space, an exhaustive key search is indeed unlikely to be successful no matter what the number of keys are targeted.\r\n\r\nBut multi-user security as defined in the other draft specifically refers to no degradation or graceful degradation. So I'm not sure that using 256-bit key can be mentioned as an alternative here.",
              "createdAt": "2024-01-17T19:17:49Z",
              "updatedAt": "2024-01-17T19:17:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85s9T5h",
          "commit": {
            "abbreviatedOid": "8ff8a23"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-17T19:19:12Z",
          "updatedAt": "2024-01-17T19:19:12Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "Whoops, good catch! Fixed, thanks!",
              "createdAt": "2024-01-17T19:19:12Z",
              "updatedAt": "2024-01-17T19:19:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85s9Was",
          "commit": {
            "abbreviatedOid": "8ff8a23"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-17T19:22:23Z",
          "updatedAt": "2024-01-17T19:22:24Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "I like the first option. Shorter sentences are indeed better. Changed, thanks!",
              "createdAt": "2024-01-17T19:22:23Z",
              "updatedAt": "2024-01-17T19:22:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85s9X51",
          "commit": {
            "abbreviatedOid": "860d057"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-17T19:26:22Z",
          "updatedAt": "2024-01-17T19:26:23Z",
          "comments": [
            {
              "originalPosition": 68,
              "body": "Updated, thanks!",
              "createdAt": "2024-01-17T19:26:23Z",
              "updatedAt": "2024-01-17T19:26:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85s-Bme",
          "commit": {
            "abbreviatedOid": "860d057"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-17T21:12:09Z",
          "updatedAt": "2024-01-17T21:12:09Z",
          "comments": [
            {
              "originalPosition": 70,
              "body": "Ok that makes sense. Happy to leave it then.",
              "createdAt": "2024-01-17T21:12:09Z",
              "updatedAt": "2024-01-17T21:12:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85s-CfE",
          "commit": {
            "abbreviatedOid": "34e0a17"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looks good.",
          "createdAt": "2024-01-17T21:14:59Z",
          "updatedAt": "2024-01-17T21:14:59Z",
          "comments": []
        }
      ]
    },
    {
      "number": 32,
      "id": "PR_kwDOKeDGj85kIYLS",
      "title": "Security Considerations: organize into subsections",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/pull/32",
      "state": "MERGED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "An attempt to address #31 - depends on #30\r\n\r\nParagraphs have just been reordered in order to fit into 5 subsections.",
      "createdAt": "2024-01-15T23:03:41Z",
      "updatedAt": "2024-01-20T14:06:37Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "baseRefName": "main",
      "baseRefOid": "43dae76598ba1e28cc7a86319e3243b36ebcbffc",
      "headRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "headRefName": "subsections",
      "headRefOid": "5bd83fcce9d50eb3587d2acfcb291ffba82cafb0",
      "closedAt": "2024-01-20T14:06:34Z",
      "mergedAt": "2024-01-20T14:06:34Z",
      "mergedBy": "jedisct1",
      "mergeCommit": {
        "oid": "4863a54e06f4a7cc6b7e1e23c2647e796bd43fe3"
      },
      "comments": [
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "We're almost there! After this, we should be ready to ask for the RGLC.",
          "createdAt": "2024-01-19T20:19:58Z",
          "updatedAt": "2024-01-19T20:19:58Z"
        },
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "Any other changes you think we should make?",
          "createdAt": "2024-01-20T12:17:16Z",
          "updatedAt": "2024-01-20T12:17:16Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOKeDGj85swNGJ",
          "commit": {
            "abbreviatedOid": "4f91ac3"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "I've had a look at this in terms of the headings/content to be in each subsection, not worrying about the dependency.",
          "createdAt": "2024-01-16T18:29:27Z",
          "updatedAt": "2024-01-16T18:39:02Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "Move `{{D23}}` before the full stop.",
              "createdAt": "2024-01-16T18:29:28Z",
              "updatedAt": "2024-01-16T18:39:02Z"
            },
            {
              "originalPosition": 13,
              "body": "Should we just say `Usage Guidelines`?",
              "createdAt": "2024-01-16T18:31:01Z",
              "updatedAt": "2024-01-16T18:39:02Z"
            },
            {
              "originalPosition": 49,
              "body": "I would say `, or fault injection attacks` for consistency, except maybe it's best to leave it given the `, may`.",
              "createdAt": "2024-01-16T18:32:58Z",
              "updatedAt": "2024-01-16T18:39:02Z"
            },
            {
              "originalPosition": 51,
              "body": "Should the `Key Commitment` and `Multi-User Security` sections move under `Usage Guidelines` or even be in that section?",
              "createdAt": "2024-01-16T18:34:36Z",
              "updatedAt": "2024-01-16T18:39:02Z"
            },
            {
              "originalPosition": 49,
              "body": "Although we do it elsewhere like this:\r\n\r\n> under multiple keys, nonces, or associated data, but\r\n\r\nBut this does have a connective.",
              "createdAt": "2024-01-16T18:35:12Z",
              "updatedAt": "2024-01-16T18:39:02Z"
            },
            {
              "originalPosition": 65,
              "body": "This last point doesn't belong in this section. It can go in `Implementation Security`. ",
              "createdAt": "2024-01-16T18:36:45Z",
              "updatedAt": "2024-01-16T18:39:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85sxCRu",
          "commit": {
            "abbreviatedOid": "4f91ac3"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-16T19:41:42Z",
          "updatedAt": "2024-01-16T19:41:43Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Sounds good!",
              "createdAt": "2024-01-16T19:41:43Z",
              "updatedAt": "2024-01-16T19:41:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85s9iR7",
          "commit": {
            "abbreviatedOid": "4f91ac3"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-17T19:53:09Z",
          "updatedAt": "2024-01-17T19:53:10Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "Done!",
              "createdAt": "2024-01-17T19:53:09Z",
              "updatedAt": "2024-01-17T19:53:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85s9i9P",
          "commit": {
            "abbreviatedOid": "4f91ac3"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-17T19:55:04Z",
          "updatedAt": "2024-01-17T19:55:04Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "Antidotes' grammar checker also suggests adding the comma. So let's do that :)",
              "createdAt": "2024-01-17T19:55:04Z",
              "updatedAt": "2024-01-17T19:55:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85s9jDB",
          "commit": {
            "abbreviatedOid": "4f91ac3"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-17T19:55:20Z",
          "updatedAt": "2024-01-17T19:55:20Z",
          "comments": [
            {
              "originalPosition": 65,
              "body": "Indeed! Moved.",
              "createdAt": "2024-01-17T19:55:20Z",
              "updatedAt": "2024-01-17T19:55:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85s9kDG",
          "commit": {
            "abbreviatedOid": "4f91ac3"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-17T19:58:08Z",
          "updatedAt": "2024-01-17T19:58:08Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "I moved these under `Usage Guidelines` but then we need to organize and find subtitles for the rest of the content in that section.\r\n\r\nAnd I'm a little bit stuck here. What would you suggest?",
              "createdAt": "2024-01-17T19:58:08Z",
              "updatedAt": "2024-01-17T19:58:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85s-FlS",
          "commit": {
            "abbreviatedOid": "4f91ac3"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-17T21:24:27Z",
          "updatedAt": "2024-01-17T21:24:27Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "My original thinking was not to have subtitles under `Usage Guidelines` so you just have 3 subsections for `Security Considerations` - usage, implementation, security. However, there's then a bit more text in one subsection.\r\n\r\nI'm also not sure what other subtitles could be used and not having subtitles for that first part but keeping `Key Commitment`/`Multi-User Security` there might look a bit odd.",
              "createdAt": "2024-01-17T21:24:27Z",
              "updatedAt": "2024-01-17T21:24:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85s-KNu",
          "commit": {
            "abbreviatedOid": "4f91ac3"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-17T21:37:41Z",
          "updatedAt": "2024-01-17T21:37:41Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "Half of the first part could fit into a \"key and nonce selection\" section.\r\n\r\nNot sure what to do with the rest :/\r\n\r\n",
              "createdAt": "2024-01-17T21:37:41Z",
              "updatedAt": "2024-01-17T21:47:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85s-Q6P",
          "commit": {
            "abbreviatedOid": "4f91ac3"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-17T21:54:15Z",
          "updatedAt": "2024-01-17T21:54:15Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "Here's an attempt.\r\n\r\n\"Additional Considerations\" is very generic, but I couldn't find anything better.",
              "createdAt": "2024-01-17T21:54:15Z",
              "updatedAt": "2024-01-17T21:54:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85s-Rnb",
          "commit": {
            "abbreviatedOid": "4f91ac3"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-17T21:56:11Z",
          "updatedAt": "2024-01-17T21:56:12Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "The paragraph on the parallelism degree affecting the output was removed. It feels at odd with the rest of that section, and even with the entire \"Security Considerations\" section.",
              "createdAt": "2024-01-17T21:56:12Z",
              "updatedAt": "2024-01-17T21:56:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tFmV3",
          "commit": {
            "abbreviatedOid": "11265b8"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-18T17:06:46Z",
          "updatedAt": "2024-01-18T17:06:47Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "Should we move this to `Implementation Security`?",
              "createdAt": "2024-01-18T17:06:46Z",
              "updatedAt": "2024-01-18T17:06:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tFm2C",
          "commit": {
            "abbreviatedOid": "11265b8"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-18T17:07:53Z",
          "updatedAt": "2024-01-18T17:07:53Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "Should this section be moved under `Usage Guidelines`? I think `Security Guarantees` should either be at the top or the bottom.",
              "createdAt": "2024-01-18T17:07:53Z",
              "updatedAt": "2024-01-18T17:07:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tFoKT",
          "commit": {
            "abbreviatedOid": "4f91ac3"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-18T17:10:50Z",
          "updatedAt": "2024-01-18T17:10:50Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "Only alternative I can think of is `Parameter Selection`, but that goes into associated data too and overlaps with key commitment. I think those headings are ok unless you prefer that, although should we lowercase the 'and' - `Key and Nonce Selection`?\r\n\r\n> The paragraph on the parallelism degree affecting the output was removed. It feels at odd with the rest of that section, and even with the entire \"Security Considerations\" section.\r\n\r\nDo we want to try and mention this somewhere else?",
              "createdAt": "2024-01-18T17:10:50Z",
              "updatedAt": "2024-01-18T17:12:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tFojW",
          "commit": {
            "abbreviatedOid": "11265b8"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-18T17:11:42Z",
          "updatedAt": "2024-01-18T17:11:42Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "Let's do that!\r\n\r\nWhat about the next paragraph on not using AEGIS as a hash function?",
              "createdAt": "2024-01-18T17:11:42Z",
              "updatedAt": "2024-01-18T17:11:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tFqRB",
          "commit": {
            "abbreviatedOid": "11265b8"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-18T17:15:17Z",
          "updatedAt": "2024-01-18T17:15:17Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "Having it at the bottom, especially with the full set of papers on AEGIS security, is indeed better.\r\n\r\nMoved!",
              "createdAt": "2024-01-18T17:15:17Z",
              "updatedAt": "2024-01-18T17:15:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tFtcx",
          "commit": {
            "abbreviatedOid": "4f91ac3"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-18T17:22:28Z",
          "updatedAt": "2024-01-18T17:22:29Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "Alright, let's keep the current headings, then.\r\n\r\nThe paragraph may fit into the `Parallel Modes` intro. But unless you feel like it's important to keep it, I'd remove it entirely.",
              "createdAt": "2024-01-18T17:22:28Z",
              "updatedAt": "2024-01-18T17:22:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tFttB",
          "commit": {
            "abbreviatedOid": "11265b8"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-18T17:23:03Z",
          "updatedAt": "2024-01-18T17:23:03Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "Do you think having an `Additional Considerations` section for the remaining paragraph is fine?",
              "createdAt": "2024-01-18T17:23:03Z",
              "updatedAt": "2024-01-18T17:23:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tSVMc",
          "commit": {
            "abbreviatedOid": "4f91ac3"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-19T19:21:29Z",
          "updatedAt": "2024-01-19T19:21:30Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "I do think the `And` should be `and` based on [RFC 7322](https://datatracker.ietf.org/doc/html/rfc7322#section-3.4):\r\n\r\n> Typically, all words in a title will be capitalized, except for internal articles, prepositions, and conjunctions.\r\n\r\nIn response to this...\r\n\r\n> The paragraph may fit into the Parallel Modes intro. But unless you feel like it's important to keep it, I'd remove it entirely.\r\n\r\nI would probably mention it in the `Parallel Modes` intro just for clarity, although it's identifiable if you implement them or look at the different test vectors and notice the same inputs.\r\n\r\nThe associated data affecting the ciphertext seems like a fun fact to keep in because that's not what traditionally happens, but I don't know where that would go unless you put it in the `Introduction` like the discussion of the key erasure.",
              "createdAt": "2024-01-19T19:21:29Z",
              "updatedAt": "2024-01-19T19:21:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tSWOp",
          "commit": {
            "abbreviatedOid": "11265b8"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-19T19:24:48Z",
          "updatedAt": "2024-01-19T19:24:48Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "If keeping it in the `Implementation Security` section, I'd say the subheading can be removed.",
              "createdAt": "2024-01-19T19:24:48Z",
              "updatedAt": "2024-01-19T19:24:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tSaFw",
          "commit": {
            "abbreviatedOid": "11265b8"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-19T19:32:56Z",
          "updatedAt": "2024-01-19T19:32:57Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "`s/###/##/` it was meant to be at same level as other headings.",
              "createdAt": "2024-01-19T19:32:56Z",
              "updatedAt": "2024-01-19T19:32:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tSa2I",
          "commit": {
            "abbreviatedOid": "11265b8"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-19T19:35:21Z",
          "updatedAt": "2024-01-19T19:35:22Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "This is more related to usage than implementation, so I think it should go somewhere else. But other subsections don't feel like good matches either.\r\n\r\nCan you think of a better heading than \"additional considerations\"?",
              "createdAt": "2024-01-19T19:35:22Z",
              "updatedAt": "2024-01-19T20:31:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tSjOP",
          "commit": {
            "abbreviatedOid": "4f91ac3"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-19T19:54:06Z",
          "updatedAt": "2024-01-19T19:54:06Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "> I would probably mention it in the Parallel Modes intro just for clarity, although it's identifiable if you implement them or look at the different test vectors and notice the same inputs.\r\n\r\nHow about:\r\n\r\nFor a given `key` and `nonce` pair, varying the parallelism degree results in distincts key streams and authentication tags. Reusing a key across different variants does not pose a security concern.\r\n\r\n?",
              "createdAt": "2024-01-19T19:54:06Z",
              "updatedAt": "2024-01-19T19:54:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tSr47",
          "commit": {
            "abbreviatedOid": "4f91ac3"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-19T20:17:13Z",
          "updatedAt": "2024-01-19T20:17:13Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "> The associated data affecting the ciphertext seems like a fun fact to keep in because that's not what traditionally happens, but I don't know where that would go unless you put it in the Introduction like the discussion of the key erasure.\r\n\r\nThis is the case with all sponge-based constructions :)\r\n\r\nThat fun fact might be understood as \"it's okay to reuse key/nonce pairs if ADs are different\", which is not universally true in AEGIS. So maybe we shouldn't reintroduce this.",
              "createdAt": "2024-01-19T20:17:13Z",
              "updatedAt": "2024-01-19T20:17:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tSwMg",
          "commit": {
            "abbreviatedOid": "4f91ac3"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-19T20:28:15Z",
          "updatedAt": "2024-01-19T20:28:15Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "or... how about this, in the \"Security Guarantees\" section:\r\n\r\n> Encrypting a message with the same key and nonce, but with different additional data, generates distinct ciphertexts that do not reveal any additional information about the message.\r\n\r\n?",
              "createdAt": "2024-01-19T20:28:15Z",
              "updatedAt": "2024-01-19T20:28:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tWsih",
          "commit": {
            "abbreviatedOid": "4f91ac3"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-20T11:54:43Z",
          "updatedAt": "2024-01-20T11:54:43Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "> For a given key and nonce pair, varying the parallelism degree results in distincts key streams and authentication tags. Reusing a key across different variants does not pose a security concern.\r\n\r\nThat's good, although typo with `distincts key streams`. Should be `distinct keystreams`. Just in case you copy and paste.\r\n",
              "createdAt": "2024-01-20T11:54:43Z",
              "updatedAt": "2024-01-20T11:54:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tWspx",
          "commit": {
            "abbreviatedOid": "4f91ac3"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-20T11:59:31Z",
          "updatedAt": "2024-01-20T11:59:31Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "> This is the case with all sponge-based constructions :)\r\n> \r\n> That fun fact might be understood as \"it's okay to reuse key/nonce pairs if ADs are different\", which is not universally true in AEGIS. So maybe we shouldn't reintroduce this.\r\n\r\nYeah, but basically no sponge-based AEAD constructions are currently used in practice aside from Ascon. I agree we do need to be careful.\r\n\r\n> Encrypting a message with the same key and nonce, but with different additional data, generates distinct ciphertexts that do not reveal any additional information about the message.\r\n\r\nI quite like that. I'd slightly tweak it to:\r\n\r\n`Encrypting a message with the same key and nonce but different additional data generates distinct ciphertexts that do not reveal any additional information about the message.`",
              "createdAt": "2024-01-20T11:59:31Z",
              "updatedAt": "2024-01-20T11:59:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tWsuo",
          "commit": {
            "abbreviatedOid": "11265b8"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-20T12:02:33Z",
          "updatedAt": "2024-01-20T12:02:33Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "`Other Uses of AEGIS`? It's difficult to have something that captures MAC, hashing, and key derivation.\r\n\r\nI'd put it in `Usage Guidelines`.",
              "createdAt": "2024-01-20T12:02:33Z",
              "updatedAt": "2024-01-20T12:03:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tWsxp",
          "commit": {
            "abbreviatedOid": "4f91ac3"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-20T12:04:10Z",
          "updatedAt": "2024-01-20T12:04:10Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "Great! Let's do that :)",
              "createdAt": "2024-01-20T12:04:10Z",
              "updatedAt": "2024-01-20T12:04:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tWsx5",
          "commit": {
            "abbreviatedOid": "ee7c9d5"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-20T12:04:16Z",
          "updatedAt": "2024-01-20T12:04:16Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "I do think the `And` should be `and` based on [RFC 7322](https://datatracker.ietf.org/doc/html/rfc7322#section-3.4):\r\n\r\n> Typically, all words in a title will be capitalized, except for internal articles, prepositions, and **conjunctions**.",
              "createdAt": "2024-01-20T12:04:16Z",
              "updatedAt": "2024-01-20T12:04:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tWs0q",
          "commit": {
            "abbreviatedOid": "ee7c9d5"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-20T12:05:12Z",
          "updatedAt": "2024-01-20T12:05:12Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "I wasn't sure about that. Thanks for the reference!\r\n\r\n`And` has been changed to `and`.",
              "createdAt": "2024-01-20T12:05:12Z",
              "updatedAt": "2024-01-20T12:05:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tWtFo",
          "commit": {
            "abbreviatedOid": "11265b8"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-20T12:13:09Z",
          "updatedAt": "2024-01-20T12:13:09Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "Yeah, that will do the job. And it's obvious that \"other\" refers to \"not as an AEAD\". Changed!",
              "createdAt": "2024-01-20T12:13:09Z",
              "updatedAt": "2024-01-20T12:13:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tWtTW",
          "commit": {
            "abbreviatedOid": "ad2b6e6"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-20T12:22:03Z",
          "updatedAt": "2024-01-20T12:22:03Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "Perhaps move this subsection under `Multi-User Security`?",
              "createdAt": "2024-01-20T12:22:03Z",
              "updatedAt": "2024-01-20T12:22:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tWtUf",
          "commit": {
            "abbreviatedOid": "ad2b6e6"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-20T12:22:44Z",
          "updatedAt": "2024-01-20T12:22:45Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "This could be moved under `Key and Nonce Selection` since it's also about the nonce.",
              "createdAt": "2024-01-20T12:22:45Z",
              "updatedAt": "2024-01-20T12:22:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tWtVj",
          "commit": {
            "abbreviatedOid": "ad2b6e6"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-20T12:23:13Z",
          "updatedAt": "2024-01-20T12:23:14Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "If moving `Multi-User Security` as suggested below, then this would be at the bottom of this subsection.",
              "createdAt": "2024-01-20T12:23:14Z",
              "updatedAt": "2024-01-20T12:23:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tWtXu",
          "commit": {
            "abbreviatedOid": "ad2b6e6"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-20T12:24:37Z",
          "updatedAt": "2024-01-20T12:24:37Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "Did you quote the right paragraph? The one on key commitment is unrelated to multi-user security.",
              "createdAt": "2024-01-20T12:24:37Z",
              "updatedAt": "2024-01-20T12:24:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tWtYc",
          "commit": {
            "abbreviatedOid": "ad2b6e6"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-20T12:25:18Z",
          "updatedAt": "2024-01-20T12:25:19Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "I'm not sure I follow... this is about using AEGIS as a MAC, and doesn't say anything about nonces?",
              "createdAt": "2024-01-20T12:25:19Z",
              "updatedAt": "2024-01-20T12:25:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tWtad",
          "commit": {
            "abbreviatedOid": "ad2b6e6"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-20T12:26:24Z",
          "updatedAt": "2024-01-20T12:26:25Z",
          "comments": [
            {
              "originalPosition": 69,
              "body": "I can't put a comment in the right place but `{{FLLW17}}` can be moved so the numbers are chronological:\r\n\r\n> Security analyses of AEGIS can be found in {{AEGIS}}, {{M14}}, {{FLLW17}}, {{ENP19}}, {{LIMS21}}, {{JLD21}}, {{STSI23}}, {{IR23}}, and {{BS23}}.\r\n",
              "createdAt": "2024-01-20T12:26:25Z",
              "updatedAt": "2024-01-20T12:26:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tWtcm",
          "commit": {
            "abbreviatedOid": "ad2b6e6"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-20T12:27:44Z",
          "updatedAt": "2024-01-20T12:27:44Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "Rereading this, do we want to say `Encrypting the same message...`?",
              "createdAt": "2024-01-20T12:27:44Z",
              "updatedAt": "2024-01-20T12:27:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tWtc0",
          "commit": {
            "abbreviatedOid": "ad2b6e6"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-20T12:27:52Z",
          "updatedAt": "2024-01-20T12:27:52Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "Oh I see, you mean moving the \"Other Uses of AEGIS\" under \"Multi-User Security\". Done!",
              "createdAt": "2024-01-20T12:27:52Z",
              "updatedAt": "2024-01-20T12:27:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tWteJ",
          "commit": {
            "abbreviatedOid": "ad2b6e6"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-20T12:28:45Z",
          "updatedAt": "2024-01-20T12:28:46Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "I meant `Multi-User Security`. Sorry it's not very clear.",
              "createdAt": "2024-01-20T12:28:45Z",
              "updatedAt": "2024-01-20T12:28:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tWtio",
          "commit": {
            "abbreviatedOid": "ad2b6e6"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-20T12:31:37Z",
          "updatedAt": "2024-01-20T12:31:37Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "Oh, you referred to the \"Multi-User Security\" subsection.\r\n\r\nI don't know. I kinda like having it as a dedicated subsection. The \"Key and Nonce Selection\" is important to every application, while the content of that section is really only relevant to applications that really care about multi-user security.",
              "createdAt": "2024-01-20T12:31:37Z",
              "updatedAt": "2024-01-20T12:31:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tWtkW",
          "commit": {
            "abbreviatedOid": "ad2b6e6"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-20T12:32:52Z",
          "updatedAt": "2024-01-20T12:32:52Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "Is the repetition of \"same\" okay?",
              "createdAt": "2024-01-20T12:32:52Z",
              "updatedAt": "2024-01-20T12:32:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tWtlw",
          "commit": {
            "abbreviatedOid": "ad2b6e6"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-20T12:33:43Z",
          "updatedAt": "2024-01-20T12:33:43Z",
          "comments": [
            {
              "originalPosition": 69,
              "body": "Oh, absolutely! Done.",
              "createdAt": "2024-01-20T12:33:43Z",
              "updatedAt": "2024-01-20T12:33:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tWuDQ",
          "commit": {
            "abbreviatedOid": "ad2b6e6"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-20T12:52:46Z",
          "updatedAt": "2024-01-20T12:52:47Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "I agree, I mean keeping the `Multi-User Security` section but repositioning it under `Key and Nonce Selection`. That way you talk about nonce stuff at the top of `Usage Guidelines` before changing topic, although having said that, key commitment talks about the key so this can probably be left as it is.\r\n\r\nSorry I've really balled this up.",
              "createdAt": "2024-01-20T12:52:47Z",
              "updatedAt": "2024-01-20T12:55:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tWuEd",
          "commit": {
            "abbreviatedOid": "ad2b6e6"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-20T12:53:40Z",
          "updatedAt": "2024-01-20T12:53:40Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "I don't mind it here.",
              "createdAt": "2024-01-20T12:53:40Z",
              "updatedAt": "2024-01-20T12:53:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tWuVd",
          "commit": {
            "abbreviatedOid": "ad2b6e6"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-20T13:05:26Z",
          "updatedAt": "2024-01-20T13:05:26Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "Perfect!",
              "createdAt": "2024-01-20T13:05:26Z",
              "updatedAt": "2024-01-20T13:05:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tWuXC",
          "commit": {
            "abbreviatedOid": "ad2b6e6"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-20T13:06:33Z",
          "updatedAt": "2024-01-20T13:06:33Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "\"same\" added!",
              "createdAt": "2024-01-20T13:06:33Z",
              "updatedAt": "2024-01-20T13:06:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tWvb7",
          "commit": {
            "abbreviatedOid": "978695d"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-20T13:46:27Z",
          "updatedAt": "2024-01-20T13:46:27Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "`additional data` => `associated data` as that's used elsewhere. Not sure how I missed that before. Then we can merge.",
              "createdAt": "2024-01-20T13:46:27Z",
              "updatedAt": "2024-01-20T13:46:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tWvpB",
          "commit": {
            "abbreviatedOid": "978695d"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-20T13:54:50Z",
          "updatedAt": "2024-01-20T13:54:50Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "Good catch!",
              "createdAt": "2024-01-20T13:54:50Z",
              "updatedAt": "2024-01-20T13:54:51Z"
            }
          ]
        }
      ]
    },
    {
      "number": 34,
      "id": "PR_kwDOKeDGj85kPRQe",
      "title": "Add \"an\"",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/pull/34",
      "state": "CLOSED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Ran the document through Google spelling/grammar check as well as Antidote, and this is all they found so far.\r\n\r\nI don't even think the \"an\" is necessary, but you are the judge :)",
      "createdAt": "2024-01-16T20:09:09Z",
      "updatedAt": "2024-01-17T19:06:13Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "baseRefName": "main",
      "baseRefOid": "c8143d5fcf53b6e21d3e5edabf078614e5c4103e",
      "headRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "headRefName": "an",
      "headRefOid": "606e9cc1e5206c8f72d5b6ab2515ed8badeeea26",
      "closedAt": "2024-01-17T19:06:13Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "body": "Nice, thanks for doing that! I'm happy to leave it off too so will close.",
          "createdAt": "2024-01-17T19:06:13Z",
          "updatedAt": "2024-01-17T19:06:13Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 35,
      "id": "PR_kwDOKeDGj85koHTM",
      "title": "Some minor suggestions from Grammarly",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/pull/35",
      "state": "MERGED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I ran the document through the free version of Grammarly.",
      "createdAt": "2024-01-20T14:40:20Z",
      "updatedAt": "2024-01-20T16:42:19Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "baseRefName": "main",
      "baseRefOid": "4863a54e06f4a7cc6b7e1e23c2647e796bd43fe3",
      "headRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "headRefName": "grammarly",
      "headRefOid": "3a0c21200bdae740e34ea9b6d673866e541be682",
      "closedAt": "2024-01-20T16:42:16Z",
      "mergedAt": "2024-01-20T16:42:16Z",
      "mergedBy": "jedisct1",
      "mergeCommit": {
        "oid": "934f1dc988fe73c0ef9a28f1440835e30cc14c65"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKeDGj85tW1Rr",
          "commit": {
            "abbreviatedOid": "dd29e47"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-20T16:24:34Z",
          "updatedAt": "2024-01-20T16:24:34Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "> They also authored the Pelican MAC which\r\n\r\nCould we change this to:\r\n\r\n> They also authored Pelican MAC, which ...",
              "createdAt": "2024-01-20T16:24:34Z",
              "updatedAt": "2024-01-20T16:24:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj85tW1uS",
          "commit": {
            "abbreviatedOid": "dd29e47"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-01-20T16:41:52Z",
          "updatedAt": "2024-01-20T16:41:52Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Comma added!",
              "createdAt": "2024-01-20T16:41:52Z",
              "updatedAt": "2024-01-20T16:41:52Z"
            }
          ]
        }
      ]
    },
    {
      "number": 36,
      "id": "PR_kwDOKeDGj85lHmXs",
      "title": "fix aegis128X2 test vector",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/pull/36",
      "state": "MERGED",
      "author": "huilinchen98",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The aegis128X2's test vector 2's ciphertext is missing a character at the end. I found the correct ciphertext here: https://github.com/jedisct1/libaegis/blob/main/src/test/main.zig#L438",
      "createdAt": "2024-01-26T00:57:25Z",
      "updatedAt": "2024-01-26T05:21:41Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "baseRefName": "main",
      "baseRefOid": "934f1dc988fe73c0ef9a28f1440835e30cc14c65",
      "headRepository": "huilinchen98/draft-irtf-cfrg-aegis-aead",
      "headRefName": "main",
      "headRefOid": "51e7b81849258e179a9e14b8ee4d4dce1b0b38cb",
      "closedAt": "2024-01-26T05:21:41Z",
      "mergedAt": "2024-01-26T05:21:41Z",
      "mergedBy": "jedisct1",
      "mergeCommit": {
        "oid": "167cab9e9e76dcce1a635f55eb78196a1838d1e1"
      },
      "comments": [
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "Oh, good catch!\n\nThank you so much!",
          "createdAt": "2024-01-26T05:21:33Z",
          "updatedAt": "2024-01-26T05:21:33Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 37,
      "id": "PR_kwDOKeDGj85lV9-f",
      "title": "Clarify what \"it\" refers to",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/pull/37",
      "state": "MERGED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-01-29T15:56:57Z",
      "updatedAt": "2024-01-29T18:43:12Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "baseRefName": "main",
      "baseRefOid": "167cab9e9e76dcce1a635f55eb78196a1838d1e1",
      "headRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "headRefName": "it",
      "headRefOid": "237389176852d7a19c1aff46f2100cff1c39445f",
      "closedAt": "2024-01-29T18:43:12Z",
      "mergedAt": "2024-01-29T18:43:12Z",
      "mergedBy": "samuel-lucas6",
      "mergeCommit": {
        "oid": "6923e71dbde1cacc20e0c050eef606007aaa04df"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKeDGj85uPYAw",
          "commit": {
            "abbreviatedOid": "2373891"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-29T18:43:01Z",
          "updatedAt": "2024-01-29T18:43:01Z",
          "comments": []
        }
      ]
    },
    {
      "number": 38,
      "id": "PR_kwDOKeDGj85lV-EV",
      "title": "Fix Init() function for 256X, and update the 128X one for consistency",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/pull/38",
      "state": "MERGED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "In 256X initialization, the Update() function should only be called once per iteration.\r\n\r\nAlso move `ctx` initialization out of the loop, as it's constant.",
      "createdAt": "2024-01-29T15:57:09Z",
      "updatedAt": "2024-01-29T18:56:41Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "baseRefName": "main",
      "baseRefOid": "167cab9e9e76dcce1a635f55eb78196a1838d1e1",
      "headRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "headRefName": "initfix",
      "headRefOid": "043c3fb11530ce598a388c4cfd76a1ece2bcf772",
      "closedAt": "2024-01-29T18:48:25Z",
      "mergedAt": "2024-01-29T18:48:25Z",
      "mergedBy": "samuel-lucas6",
      "mergeCommit": {
        "oid": "41b21b2948774f56fc3125b3fa146cae58fc406e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKeDGj85uPZ8-",
          "commit": {
            "abbreviatedOid": "043c3fb"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-29T18:48:03Z",
          "updatedAt": "2024-01-29T18:48:03Z",
          "comments": []
        }
      ]
    },
    {
      "number": 39,
      "id": "PR_kwDOKeDGj85lfArY",
      "title": "Mention that keys must not be reused even with different tag lengths",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/pull/39",
      "state": "MERGED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Motivated by https://eprint.iacr.org/2016/463.pdf",
      "createdAt": "2024-01-30T18:12:54Z",
      "updatedAt": "2024-01-30T19:24:10Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "baseRefName": "main",
      "baseRefOid": "41b21b2948774f56fc3125b3fa146cae58fc406e",
      "headRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "headRefName": "taglen",
      "headRefOid": "fe287e8090077cf23b725cebb3042aaa8b9f74e0",
      "closedAt": "2024-01-30T19:12:36Z",
      "mergedAt": "2024-01-30T19:12:36Z",
      "mergedBy": "samuel-lucas6",
      "mergeCommit": {
        "oid": "bd33610bc9a4b111ae71190246c7d3b3a4d2aafd"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKeDGj85uZYZc",
          "commit": {
            "abbreviatedOid": "fe287e8"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-01-30T19:12:28Z",
          "updatedAt": "2024-01-30T19:12:28Z",
          "comments": []
        }
      ]
    },
    {
      "number": 42,
      "id": "PR_kwDOKeDGj85yaHbh",
      "title": "Mention another way to achieve full commitment",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/pull/42",
      "state": "MERGED",
      "author": "samuel-lucas6",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "As discussed in #40.",
      "createdAt": "2024-06-13T20:12:05Z",
      "updatedAt": "2024-08-08T17:51:27Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "baseRefName": "main",
      "baseRefOid": "8d7bdd34832ab4808888fb7ef1a895b551919441",
      "headRepository": "samuel-lucas6/draft-irtf-cfrg-aegis-aead",
      "headRefName": "main",
      "headRefOid": "37ce3ac7031049650ee421f457ef685239c65328",
      "closedAt": "2024-06-15T11:39:31Z",
      "mergedAt": "2024-06-15T11:39:31Z",
      "mergedBy": "jedisct1",
      "mergeCommit": {
        "oid": "7c9cdeaef774f8084b34bea424be83db1d0b0fe2"
      },
      "comments": [
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "The output of a KDF must be indistinguishable from a random function , so given the key size required by AEGIS, collision resistance is implied.\r\n\r\nHowever, for key commitment, the KDF needs to be preimage-resistant, or else it remains possible to find distinct `(k,ad)` input pairs that produce the same key.\r\n\r\nBut I'm not sure that preimage resistance is a required property for a KDF. \r\n\r\nThis is certainly true for HKDF when instantiated with secure hash functions. But we can't generalize that to any KDF.\r\n\r\n",
          "createdAt": "2024-06-13T20:45:09Z",
          "updatedAt": "2024-06-13T20:45:09Z"
        },
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "It's very common to have a key derivation step using HKDF before using an AEAD.\r\n\r\nSo, maybe we could suggest including what would be the AD in that derivation step, as the HKDF salt parameter.",
          "createdAt": "2024-06-13T20:54:59Z",
          "updatedAt": "2024-06-13T20:54:59Z"
        },
        {
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "body": "> The output of a KDF must be indistinguishable from a random function , so given the key size required by AEGIS, collision resistance is implied.\r\n\r\nI see what you mean. However, commitment papers like [BH22](https://eprint.iacr.org/2022/268) and [ADGKLS22](https://www.usenix.org/conference/usenixsecurity22/presentation/albertini) call this a collision-resistant PRF, and obviously PRFs are used for KDFs.\r\n\r\nYou could use HMAC-SHA1, which is obviously a PRF that produces a 160-bit output (large enough for collision resistance), and it isn't collision-resistant due to SHA-1 so isn't committing. As another example, CBC-MAC is a PRF with prefix-free inputs but [not collision resistant](https://en.wikipedia.org/wiki/CBC-MAC#Using_the_same_key_for_encryption_and_authentication) and thus [not committing](https://tosc.iacr.org/index.php/ToSC/article/view/604).\r\n\r\n> However, for key commitment, the KDF needs to be preimage-resistant, or else it remains possible to find distinct (k,ad) input pairs that produce the same key.\r\n\r\nIs preimage resistance not [context discoverability](https://eprint.iacr.org/2023/526) rather than commitment? It's been a while since I've looked at that paper, but prior to that paper everybody only talked about collision resistance. The terminology is quite confusing.\r\n\r\n> But I'm not sure that preimage resistance is a required property for a KDF.\r\n\r\nCMAC [isn't preimage resistant](https://eprint.iacr.org/2023/526) but used as a [NIST KDF](https://csrc.nist.gov/pubs/sp/800/108/r1/upd1/final), so it doesn't seem to be.\r\n\r\n> This is certainly true for HKDF when instantiated with secure hash functions. But we can't generalize that to any KDF.\r\n\r\nThat's basically what I mean by a collision-resistant KDF; one that's hash-based.\r\n\r\n> maybe we could suggest including what would be the AD in that derivation step, as the HKDF salt parameter.\r\n\r\nYeah, I was debating whether to name the parameter, although I was thinking of the info parameter. The salt is a bit dodgy in that a large associated data would get hashed, which could affect the commitment. This variable length key issue is mentioned in a [recent paper](https://eprint.iacr.org/2024/928) (that I haven't read in full).",
          "createdAt": "2024-06-14T07:59:06Z",
          "updatedAt": "2024-06-14T07:59:06Z"
        },
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "Hi Samuel,\r\n\r\n> Is preimage resistance not [context discoverability](https://eprint.iacr.org/2023/526) rather than commitment? It's been a while since I've looked at that paper, but prior to that paper everybody only talked about collision resistance. The terminology is quite confusing.\r\n\r\nThe terminology is indeed quite confusing. \"Context discoverability\" was introduced in that paper, and I don't think it's been widely used elsewhere.\r\n\r\n> That's basically what I mean by a collision-resistant KDF; one that's hash-based.\r\n\r\nAlright let's keep that, then. We can always clarify this later if we get feedback from the CFRG.\r\n\r\n> I was debating whether to name the parameter, although I was thinking of the info parameter. The salt is a bit dodgy in that a large associated data would get hashed, which could affect the commitment. This variable length key issue is mentioned in a [recent paper](https://eprint.iacr.org/2024/928) (that I haven't read in full).\r\n\r\n`info` would also be more efficient, but it's already commonly used by applications to describe the purpose of the derived key. So, adding the AD to it requires proper separation between the key context and the AD. Maybe we should provide a little bit more guidance. People may be confused about where exactly the AD should be added to their regular key derivation step.\r\n",
          "createdAt": "2024-06-14T10:14:24Z",
          "updatedAt": "2024-06-14T10:14:24Z"
        },
        {
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm still wondering if this should say `a minimum of 128-bit collision resistance` and maybe `must` should be changed to `MUST`:\r\n\r\n> Protocols mandating a fully committing scheme without that restriction can provide the associated data as input to a cryptographic hash function and use the output as the ad parameter of the Encrypt and Decrypt functions. The selected hash function must ensure a minimum of 128-bit preimage resistance. An instance of such a function is SHA-256 [[RFC6234](https://cfrg.github.io/draft-irtf-cfrg-aegis-aead/draft-irtf-cfrg-aegis-aead.html#RFC6234)].\r\n",
          "createdAt": "2024-08-08T17:51:25Z",
          "updatedAt": "2024-08-08T17:51:25Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 44,
      "id": "PR_kwDOKeDGj8533WRx",
      "title": "Reference another security analysis paper",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/pull/44",
      "state": "MERGED",
      "author": "samuel-lucas6",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #43.",
      "createdAt": "2024-08-08T17:31:09Z",
      "updatedAt": "2024-08-08T20:51:47Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "baseRefName": "main",
      "baseRefOid": "a5f1c10a73af7a82bb28e672a8cd330c32d72945",
      "headRepository": "samuel-lucas6/draft-irtf-cfrg-aegis-aead",
      "headRefName": "main",
      "headRefOid": "cbd9fbbeb60eb98fc96dbb5cc2ce6bab30863a67",
      "closedAt": "2024-08-08T20:51:40Z",
      "mergedAt": "2024-08-08T20:51:40Z",
      "mergedBy": "jedisct1",
      "mergeCommit": {
        "oid": "60802f0016bcb7a34d9ebeb7e8303769b20e2274"
      },
      "comments": [
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "Thank you Samuel!",
          "createdAt": "2024-08-08T20:51:46Z",
          "updatedAt": "2024-08-08T20:51:46Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 46,
      "id": "PR_kwDOKeDGj856GHxN",
      "title": "Fix off-by-one in P_MAX and A_MAX",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/pull/46",
      "state": "MERGED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Spotted by @Yawning, thanks!\r\n\r\nFixes #45",
      "createdAt": "2024-09-01T21:24:36Z",
      "updatedAt": "2024-09-03T18:01:08Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "baseRefName": "main",
      "baseRefOid": "dc1f4805eba4c4305b16f9741524dbde0ccea586",
      "headRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "headRefName": "adjust_pmax_amax",
      "headRefOid": "83cb4f395ea89d71f2d7a99c529c8809fcb6a6ca",
      "closedAt": "2024-09-03T18:01:04Z",
      "mergedAt": "2024-09-03T18:01:04Z",
      "mergedBy": "jedisct1",
      "mergeCommit": {
        "oid": "55b91329f7987e20724727c959a0a4b0a1460dd2"
      },
      "comments": [
        {
          "author": "Yawning",
          "authorAssociation": "NONE",
          "body": "No problem.\r\n\r\nThe AEGIS-256 description also has the issue, so one more place to update.\r\n\r\nhttps://github.com/cfrg/draft-irtf-cfrg-aegis-aead/blob/9cccd938bb387ca9f643d438b2b139a073b3bc8a/draft-irtf-cfrg-aegis-aead.md?plain=1#L698-L701",
          "createdAt": "2024-09-02T10:19:14Z",
          "updatedAt": "2024-09-02T10:19:14Z"
        },
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "/cc @samuel-lucas6 ",
          "createdAt": "2024-09-02T10:26:39Z",
          "updatedAt": "2024-09-02T10:26:39Z"
        },
        {
          "author": "Yawning",
          "authorAssociation": "NONE",
          "body": "> Shouldn't `length MUST be less than P_MAX` and `length MUST be less than A_MAX` (in Section 3.1 and 4.1) still be changed? Otherwise, the maximum is technically 261 - 2 bytes.\r\n> \r\n> If I'm right about that, `length MUST be less than C_MAX` and `length MUST be less than A_MAX` should also be changed in Section 3.2 and 4.2.\r\n\r\nAh, yes.  That's right.\r\n\r\nUnrelated, thanks for the nice spec, I've been working on implementing 128L and 256, and it's been easy to do.",
          "createdAt": "2024-09-02T18:46:20Z",
          "updatedAt": "2024-09-02T18:46:20Z"
        },
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "Good catch, @samuel-lucas6 !\r\n",
          "createdAt": "2024-09-02T20:44:05Z",
          "updatedAt": "2024-09-02T20:44:05Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOKeDGj86HqaAd",
          "commit": {
            "abbreviatedOid": "d6bd6b1"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Shouldn't `length MUST be less than P_MAX` and `length MUST be less than A_MAX` (in Section 3.1 and 4.1) still be changed? Otherwise, the maximum is technically 2<sup>61</sup> - 2 bytes.\r\n\r\nIf I'm right about that, `length MUST be less than C_MAX` and `length MUST be less than A_MAX` should also be changed in Section 3.2 and 4.2.\r\n\r\nBesides that, it looks ok. I'm not super keen on the brackets inside brackets, but there's not really anything you can do.",
          "createdAt": "2024-09-02T18:10:53Z",
          "updatedAt": "2024-09-02T18:10:53Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKeDGj86HyUYJ",
          "commit": {
            "abbreviatedOid": "83cb4f3"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM. Thanks @Yawning!",
          "createdAt": "2024-09-03T18:00:09Z",
          "updatedAt": "2024-09-03T18:00:09Z",
          "comments": []
        }
      ]
    },
    {
      "number": 48,
      "id": "PR_kwDOKeDGj858As4g",
      "title": "Cite paper on bitwise analysis",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/pull/48",
      "state": "MERGED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #47",
      "createdAt": "2024-09-19T09:56:13Z",
      "updatedAt": "2024-09-19T19:45:26Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "baseRefName": "main",
      "baseRefOid": "55b91329f7987e20724727c959a0a4b0a1460dd2",
      "headRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "headRefName": "ssi24",
      "headRefOid": "07ff81e11c858987276af2a74ddd26e219a47ba3",
      "closedAt": "2024-09-19T19:45:23Z",
      "mergedAt": "2024-09-19T19:45:23Z",
      "mergedBy": "jedisct1",
      "mergeCommit": {
        "oid": "dc1cec12bcd5efdc01eeebb68bf68a8521be0a49"
      },
      "comments": [
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "Shall we also update their affiliations in other cited papers?",
          "createdAt": "2024-09-19T16:41:43Z",
          "updatedAt": "2024-09-19T16:41:43Z"
        },
        {
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "body": "> Shall we also update their affiliations in other cited papers?\r\n\r\nI think we should just copy each paper since it's correct at the time of publication. It'll get confusing otherwise.",
          "createdAt": "2024-09-19T16:52:36Z",
          "updatedAt": "2024-09-19T16:52:36Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOKeDGj86KDE3S",
          "commit": {
            "abbreviatedOid": "554f8f0"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Two author changes. Otherwise, looks good and happy with the `at least 128-bit security` claim. Probably safest for now.",
          "createdAt": "2024-09-19T16:30:34Z",
          "updatedAt": "2024-09-19T16:33:34Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "Should be `Mitsubishi Electric Corporation`.",
              "createdAt": "2024-09-19T16:30:34Z",
              "updatedAt": "2024-09-19T16:33:34Z"
            },
            {
              "originalPosition": 21,
              "body": "`National Institute of Information and Communications Technology` isn't mentioned in this paper so not sure if he's still there.",
              "createdAt": "2024-09-19T16:31:23Z",
              "updatedAt": "2024-09-19T16:33:34Z"
            }
          ]
        }
      ]
    },
    {
      "number": 49,
      "id": "PR_kwDOKeDGj858PHng",
      "title": "Improve the structure of test vectors",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/pull/49",
      "state": "MERGED",
      "author": "jedisct1",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "As recommended by the RFC editor:\r\n\r\n- Label test vectors sections as \"test-vectors\"\r\n- Add a link to the JSON version\r\n\r\nSee https://mailarchive.ietf.org/arch/msg/cfrg/sWa_WkzOW5IPvQ71Hmz21HsBNVY/",
      "createdAt": "2024-09-21T08:52:13Z",
      "updatedAt": "2024-09-21T11:58:20Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "baseRefName": "main",
      "baseRefOid": "dc1cec12bcd5efdc01eeebb68bf68a8521be0a49",
      "headRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "headRefName": "tv",
      "headRefOid": "c2fa1836825825567a8741ac10ecc5669fd1e7d5",
      "closedAt": "2024-09-21T11:58:16Z",
      "mergedAt": "2024-09-21T11:58:16Z",
      "mergedBy": "jedisct1",
      "mergeCommit": {
        "oid": "ad695412dfe29dbba4c57a410fd8873de125daad"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKeDGj86KQ-vy",
          "commit": {
            "abbreviatedOid": "caed669"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-09-21T10:17:37Z",
          "updatedAt": "2024-09-21T10:20:39Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "`[TEST-VECTORS]` should be `{{TEST-VECTORS}}` I believe.\r\n\r\nI also wonder if the second sentence can be phrased better, but I see that you've taken it from RFC 9605.",
              "createdAt": "2024-09-21T10:17:37Z",
              "updatedAt": "2024-09-21T10:20:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj86KQ_A3",
          "commit": {
            "abbreviatedOid": "caed669"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-21T10:28:18Z",
          "updatedAt": "2024-09-21T10:28:18Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "I did. But it can still be phrased better. What would you suggest?",
              "createdAt": "2024-09-21T10:28:18Z",
              "updatedAt": "2024-09-21T10:28:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj86KRAOd",
          "commit": {
            "abbreviatedOid": "d34850b"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-21T11:11:06Z",
          "updatedAt": "2024-09-21T11:11:06Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "How about \"In this format, byte strings are represented as JSON strings containing their hexadecimal encoding.\" ?",
              "createdAt": "2024-09-21T11:11:06Z",
              "updatedAt": "2024-09-21T11:11:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKeDGj86KRCIe",
          "commit": {
            "abbreviatedOid": "d34850b"
          },
          "author": "samuel-lucas6",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-09-21T11:19:43Z",
          "updatedAt": "2024-09-21T11:19:43Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "> How about \"In this format, byte strings are represented as JSON strings containing their hexadecimal encoding.\" ?\r\n\r\nYeah that's better.",
              "createdAt": "2024-09-21T11:19:43Z",
              "updatedAt": "2024-09-21T11:19:43Z"
            }
          ]
        }
      ]
    },
    {
      "number": 51,
      "id": "PR_kwDOKeDGj859sMgC",
      "title": "Change setup phase to initialization function",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aegis-aead/pull/51",
      "state": "MERGED",
      "author": "samuel-lucas6",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Part of #50.\r\n\r\nOr we could say `after initialization`. I didn't want to name `Init()` since it hasn't been defined yet.",
      "createdAt": "2024-10-05T10:32:44Z",
      "updatedAt": "2024-10-05T10:35:55Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aegis-aead",
      "baseRefName": "main",
      "baseRefOid": "8487ddbfff172fd7b23e9de834ce46c6dfa5ae59",
      "headRepository": "samuel-lucas6/draft-irtf-cfrg-aegis-aead",
      "headRefName": "main",
      "headRefOid": "99aa3a02052ea40af028ce81737554561b36c66e",
      "closedAt": "2024-10-05T10:35:23Z",
      "mergedAt": "2024-10-05T10:35:23Z",
      "mergedBy": "jedisct1",
      "mergeCommit": {
        "oid": "15249ce7ad37448b87bd3fd6e57feb0241cfd2ef"
      },
      "comments": [
        {
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "body": "Thank you!",
          "createdAt": "2024-10-05T10:35:54Z",
          "updatedAt": "2024-10-05T10:35:54Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOKeDGj86MCvGU",
          "commit": {
            "abbreviatedOid": "99aa3a0"
          },
          "author": "jedisct1",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-05T10:35:17Z",
          "updatedAt": "2024-10-05T10:35:17Z",
          "comments": []
        }
      ]
    }
  ]
}